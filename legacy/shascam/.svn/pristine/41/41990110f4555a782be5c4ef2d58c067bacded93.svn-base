{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { loginAPI } from \"./functions\";\nimport Loader from \"./Loader\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { customstyles } from \"../customstyle\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onMoveForgot = function () {\n      _this.props.navigation.navigate('Forgot');\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      username_err: '',\n      password_err: '',\n      api_resp: '',\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"validateInput\",\n    value: function validateInput() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n      var isValid = true;\n\n      if (email == '') {\n        this.setState({\n          username_err: 'Username is required'\n        });\n        isValid = false;\n        return;\n      } else {\n        this.setState({\n          username_err: ''\n        });\n      }\n\n      if (pattern.test(email) === false) {\n        this.setState({\n          username_err: 'Username is not valid'\n        });\n        isValid = false;\n        return;\n      } else {\n        this.setState({\n          username_err: ''\n        });\n      }\n\n      if (password == '') {\n        this.setState({\n          password_err: 'Password is required'\n        });\n        isValid = false;\n        return;\n      } else {\n        this.setState({\n          password_err: ''\n        });\n      }\n\n      if (isValid) {\n        this.onLogin();\n      }\n    }\n  }, {\n    key: \"onLogin\",\n    value: function onLogin() {\n      var _this2 = this;\n\n      var data = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.setState({\n        isLoading: true\n      });\n      var response = loginAPI(data).then(function (res) {\n        var message = res.message;\n        var status = res.status;\n        var userDetails = res.user;\n\n        if (status == 1) {\n          AsyncStorage.setItem('userInfo', JSON.stringify(userDetails));\n\n          _this2.props.navigation.navigate('MyTabs', {\n            userInfo: userDetails\n          });\n\n          _this2.setState({\n            email: '',\n            password: '',\n            api_resp: '',\n            isLoading: false\n          });\n        } else {\n          _this2.setState({\n            api_resp: message,\n            api_color: customstyles.alertdanger,\n            isLoading: false\n          });\n\n          setTimeout(function () {\n            _this2.setState({\n              api_resp: '',\n              api_color: ''\n            });\n          }, 5000);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(LinearGradient, {\n        colors: ['#663792', '#3d418b', '#0a4487'],\n        start: {\n          x: 0,\n          y: .5\n        },\n        end: {\n          x: 1,\n          y: 1\n        },\n        style: styles.linearGradient,\n        children: _jsxs(View, {\n          style: customstyles.logincontainer,\n          children: [_jsx(View, {\n            style: {\n              paddingVertical: 20\n            },\n            children: _jsx(Text, {\n              style: customstyles.headingWhite,\n              children: \"Login\"\n            })\n          }), this.state.api_resp.length > 0 && _jsx(Text, {\n            style: customstyles.alertdanger,\n            children: this.state.api_resp\n          }), _jsx(TextInput, {\n            autoCapitalize: \"none\",\n            value: this.state.email,\n            onChangeText: function onChangeText(email) {\n              return _this3.setState({\n                email: email\n              });\n            },\n            placeholder: 'Username',\n            style: customstyles.input,\n            placeholderTextColor: \"#fff\"\n          }), this.state.username_err.length > 0 && _jsx(Text, {\n            style: customstyles.alertdanger,\n            children: this.state.username_err\n          }), _jsx(TextInput, {\n            autoCapitalize: \"none\",\n            value: this.state.password,\n            onChangeText: function onChangeText(password) {\n              return _this3.setState({\n                password: password\n              });\n            },\n            placeholder: 'Password',\n            secureTextEntry: true,\n            style: customstyles.input,\n            placeholderTextColor: \"#fff\"\n          }), this.state.password_err.length > 0 && _jsx(Text, {\n            style: customstyles.alertdanger,\n            children: this.state.password_err\n          }), _jsx(TouchableOpacity, {\n            onPress: this.validateInput.bind(this),\n            children: _jsxs(View, {\n              style: _objectSpread(_objectSpread({}, styles.button), {}, {\n                backgroundColor: this.state.isLoading ? \"#fff\" : \"#FFF\"\n              }),\n              children: [_jsx(Text, {\n                style: styles.buttonText,\n                children: this.state.isLoading ? \"LOGIN...\" : \"LOGIN\"\n              }), this.state.isLoading && _jsx(Loader, {})]\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: this.onMoveForgot,\n            children: _jsx(Text, {\n              style: customstyles.labelwhite,\n              children: \"Forgot Password\"\n            })\n          })]\n        })\n      });\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  linearGradient: {\n    flex: 1,\n    height: \"100%\",\n    justifyContent: \"center\",\n    padding: 30\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10\n  },\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#fff\",\n    borderRadius: 30,\n    paddingVertical: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: -2,\n      height: 6\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 7\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    padding: 10,\n    marginBottom: 20,\n    borderRadius: 30,\n    marginTop: 20\n  },\n  buttonText: {\n    color: \"#663792\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["D:/IdentityWallet/components/LoginScreen.js"],"names":["React","Component","loginAPI","Loader","LinearGradient","customstyles","AsyncStorage","LoginScreen","props","onMoveForgot","navigation","navigate","state","email","password","username_err","password_err","api_resp","isLoading","pattern","isValid","setState","test","onLogin","data","response","then","res","message","status","userDetails","user","setItem","JSON","stringify","userInfo","api_color","alertdanger","setTimeout","catch","error","console","log","x","y","styles","linearGradient","logincontainer","paddingVertical","headingWhite","length","input","validateInput","bind","button","backgroundColor","buttonText","labelwhite","StyleSheet","create","screenContainer","flex","justifyContent","height","padding","container","alignItems","width","borderWidth","borderColor","marginBottom","appButtonContainer","elevation","borderRadius","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","display","flexDirection","color","fontWeight","fontSize"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,SAASC,QAAT;AACA,OAAOC,MAAP;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,YAAT;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;IAGMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAwGnBC,YAxGmB,GAwGJ,YAAM;AACjB,YAAKD,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B;AACH,KA1GkB;;AAGf,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,YAAY,EAAE,EAJL;AAKTC,MAAAA,QAAQ,EAAE,EALD;AAMTC,MAAAA,SAAS,EAAE;AANF,KAAb;AAHe;AAWlB;;;;WAED,yBAAgB;AACZ,wBAA4B,KAAKN,KAAjC;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,QAAf,eAAeA,QAAf;AACA,UAAIK,OAAO,GAAG,6CAAd;AACA,UAAIC,OAAO,GAAG,IAAd;;AAEA,UAAKP,KAAK,IAAI,EAAd,EAAmB;AACf,aAAKQ,QAAL,CAAc;AACVN,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGAK,QAAAA,OAAO,GAAG,KAAV;AACA;AACH,OAND,MAMO;AACH,aAAKC,QAAL,CAAc;AACVN,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;;AAED,UAAII,OAAO,CAACG,IAAR,CAAaT,KAAb,MAAwB,KAA5B,EAAmC;AAC/B,aAAKQ,QAAL,CAAc;AACVN,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGAK,QAAAA,OAAO,GAAG,KAAV;AACA;AACH,OAND,MAMO;AACH,aAAKC,QAAL,CAAc;AACVN,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;;AAED,UAAKD,QAAQ,IAAI,EAAjB,EAAsB;AAClB,aAAKO,QAAL,CAAc;AACVL,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGAI,QAAAA,OAAO,GAAG,KAAV;AACA;AACH,OAND,MAMO;AACH,aAAKC,QAAL,CAAc;AACVL,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;;AAED,UAAII,OAAJ,EAAa;AAET,aAAKG,OAAL;AACH;AACJ;;;WAED,mBAAU;AAAA;;AACN,UAAIC,IAAI,GAAG;AACPX,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADX;AAEPC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFd,OAAX;AAIA,WAAKO,QAAL,CAAc;AACVH,QAAAA,SAAS,EAAE;AADD,OAAd;AAGA,UAAIO,QAAQ,GAAGvB,QAAQ,CAACsB,IAAD,CAAR,CACVE,IADU,CACL,UAAAC,GAAG,EAAI;AAET,YAAIC,OAAO,GAAGD,GAAG,CAACC,OAAlB;AACA,YAAIC,MAAM,GAAGF,GAAG,CAACE,MAAjB;AACA,YAAIC,WAAW,GAAGH,GAAG,CAACI,IAAtB;;AAGA,YAAKF,MAAM,IAAI,CAAf,EAAmB;AAEfvB,UAAAA,YAAY,CAAC0B,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAAjC;;AAEA,UAAA,MAAI,CAACtB,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,EAAyC;AAAEwB,YAAAA,QAAQ,EAAEL;AAAZ,WAAzC;;AACA,UAAA,MAAI,CAACT,QAAL,CAAc;AACVR,YAAAA,KAAK,EAAE,EADG;AAEVC,YAAAA,QAAQ,EAAE,EAFA;AAGVG,YAAAA,QAAQ,EAAE,EAHA;AAIVC,YAAAA,SAAS,EAAE;AAJD,WAAd;AAMH,SAXD,MAWO;AACH,UAAA,MAAI,CAACG,QAAL,CAAc;AACVJ,YAAAA,QAAQ,EAAEW,OADA;AAEVQ,YAAAA,SAAS,EAAE/B,YAAY,CAACgC,WAFd;AAGVnB,YAAAA,SAAS,EAAE;AAHD,WAAd;;AAKAoB,UAAAA,UAAU,CAAC,YAAM;AACb,YAAA,MAAI,CAACjB,QAAL,CAAc;AACVJ,cAAAA,QAAQ,EAAE,EADA;AAEVmB,cAAAA,SAAS,EAAE;AAFD,aAAd;AAIH,WALS,EAKP,IALO,CAAV;AAMH;AACJ,OAhCU,EAiCVG,KAjCU,CAiCJ,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OAjCD,CAAf;AAkCH;;;WAMD,kBAAS;AAAA;;AACL,aACI,KAAC,cAAD;AAAgB,QAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAAxB;AAA2D,QAAA,KAAK,EAAE;AAAEG,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE;AAAX,SAAlE;AAAmF,QAAA,GAAG,EAAE;AAAED,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE;AAAX,SAAxF;AAAwG,QAAA,KAAK,EAAEC,MAAM,CAACC,cAAtH;AAAA,kBAEI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEzC,YAAY,CAAC0C,cAA1B;AAAA,qBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,eAAe,EAAE;AAAnB,aAAb;AAAA,sBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE3C,YAAY,CAAC4C,YAA1B;AAAA;AAAA;AADJ,YADJ,EAKQ,KAAKrC,KAAL,CAAWK,QAAX,CAAoBiC,MAApB,GAA6B,CAA7B,IACA,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE7C,YAAY,CAACgC,WAA1B;AAAA,sBAAwC,KAAKzB,KAAL,CAAWK;AAAnD,YANR,EAUI,KAAC,SAAD;AACI,YAAA,cAAc,EAAC,MADnB;AAEI,YAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAFtB;AAGI,YAAA,YAAY,EAAE,sBAACA,KAAD;AAAA,qBAAW,MAAI,CAACQ,QAAL,CAAc;AAAER,gBAAAA,KAAK,EAALA;AAAF,eAAd,CAAX;AAAA,aAHlB;AAII,YAAA,WAAW,EAAE,UAJjB;AAKI,YAAA,KAAK,EAAER,YAAY,CAAC8C,KALxB;AAMI,YAAA,oBAAoB,EAAC;AANzB,YAVJ,EAmBQ,KAAKvC,KAAL,CAAWG,YAAX,CAAwBmC,MAAxB,GAAiC,CAAjC,IACA,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE7C,YAAY,CAACgC,WAA1B;AAAA,sBAAwC,KAAKzB,KAAL,CAAWG;AAAnD,YApBR,EAuBI,KAAC,SAAD;AACI,YAAA,cAAc,EAAC,MADnB;AAEI,YAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QAFtB;AAGI,YAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,qBAAc,MAAI,CAACO,QAAL,CAAc;AAAEP,gBAAAA,QAAQ,EAARA;AAAF,eAAd,CAAd;AAAA,aAHlB;AAII,YAAA,WAAW,EAAE,UAJjB;AAKI,YAAA,eAAe,EAAE,IALrB;AAMI,YAAA,KAAK,EAAET,YAAY,CAAC8C,KANxB;AAOI,YAAA,oBAAoB,EAAC;AAPzB,YAvBJ,EAiCQ,KAAKvC,KAAL,CAAWI,YAAX,CAAwBkC,MAAxB,GAAiC,CAAjC,IACA,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE7C,YAAY,CAACgC,WAA1B;AAAA,sBAAwC,KAAKzB,KAAL,CAAWI;AAAnD,YAlCR,EAuCI,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAE,KAAKoC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAA3B;AAAA,sBACI,MAAC,IAAD;AACI,cAAA,KAAK,kCACER,MAAM,CAACS,MADT;AAEDC,gBAAAA,eAAe,EAAE,KAAK3C,KAAL,CAAWM,SAAX,GAAuB,MAAvB,GAAgC;AAFhD,gBADT;AAAA,yBAMI,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE2B,MAAM,CAACW,UAApB;AAAA,0BACK,KAAK5C,KAAL,CAAWM,SAAX,GAAuB,UAAvB,GAAoC;AADzC,gBANJ,EASK,KAAKN,KAAL,CAAWM,SAAX,IAAwB,KAAC,MAAD,KAT7B;AAAA;AADJ,YAvCJ,EAqDI,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAE,KAAKT,YAAhC;AAAA,sBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEJ,YAAY,CAACoD,UAA1B;AAAA;AAAA;AADJ,YArDJ;AAAA;AAFJ,QADJ;AA8DH;;;;EA5KqBxD,S;;AA+K1B,IAAM4C,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,eAAe,EAAE;AACbC,IAAAA,IAAI,EAAE,CADO;AAEbC,IAAAA,cAAc,EAAE;AAFH,GADY;AAK7BhB,EAAAA,cAAc,EAAE;AACZe,IAAAA,IAAI,EAAE,CADM;AAEZE,IAAAA,MAAM,EAAE,MAFI;AAGZD,IAAAA,cAAc,EAAE,QAHJ;AAIZE,IAAAA,OAAO,EAAE;AAJG,GALa;AAW7BC,EAAAA,SAAS,EAAE;AACPJ,IAAAA,IAAI,EAAE,CADC;AAEPK,IAAAA,UAAU,EAAE,QAFL;AAGPJ,IAAAA,cAAc,EAAE,QAHT;AAIPP,IAAAA,eAAe,EAAE;AAJV,GAXkB;AAiB7BJ,EAAAA,KAAK,EAAE;AACHgB,IAAAA,KAAK,EAAE,GADJ;AAEHJ,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,OAAO,EAAE,EAHN;AAIHI,IAAAA,WAAW,EAAE,CAJV;AAKHC,IAAAA,WAAW,EAAE,OALV;AAMHC,IAAAA,YAAY,EAAE;AANX,GAjBsB;AAyB7BC,EAAAA,kBAAkB,EAAE;AAChBC,IAAAA,SAAS,EAAE,CADK;AAEhBjB,IAAAA,eAAe,EAAE,MAFD;AAGhBkB,IAAAA,YAAY,EAAE,EAHE;AAIhBzB,IAAAA,eAAe,EAAE,EAJD;AAMhB0B,IAAAA,SAAS,EAAE,EANK;AAOhBJ,IAAAA,YAAY,EAAE,EAPE;AAQhBK,IAAAA,WAAW,EAAE,MARG;AAShBC,IAAAA,YAAY,EAAE;AAAET,MAAAA,KAAK,EAAE,CAAC,CAAV;AAAaJ,MAAAA,MAAM,EAAE;AAArB,KATE;AAUhBc,IAAAA,aAAa,EAAE,GAVC;AAWhBC,IAAAA,YAAY,EAAE;AAXE,GAzBS;AAsC7BxB,EAAAA,MAAM,EAAE;AACJyB,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,KAFX;AAGJlB,IAAAA,cAAc,EAAE,cAHZ;AAIJI,IAAAA,UAAU,EAAE,QAJR;AAKJF,IAAAA,OAAO,EAAE,EALL;AAMJM,IAAAA,YAAY,EAAE,EANV;AAOJG,IAAAA,YAAY,EAAE,EAPV;AAQJC,IAAAA,SAAS,EAAE;AARP,GAtCqB;AAgD7BlB,EAAAA,UAAU,EAAE;AACRyB,IAAAA,KAAK,EAAE,SADC;AAERC,IAAAA,UAAU,EAAE,MAFJ;AAGRC,IAAAA,QAAQ,EAAE;AAHF;AAhDiB,CAAlB,CAAf;AAuDA,eAAe5E,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, TextInput, View, StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport { loginAPI } from './functions';\r\nimport Loader from './Loader';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { customstyles } from \"../customstyle\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nclass LoginScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            username_err: '',\r\n            password_err: '',\r\n            api_resp: '',\r\n            isLoading: false,\r\n        };\r\n    }\r\n\r\n    validateInput() {\r\n        const { email, password } = this.state;\r\n        let pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\r\n        let isValid = true;\r\n        //Alert.alert('Credentials', `${username} + ${password}`);\r\n        if ((email == '')) {\r\n            this.setState({\r\n                username_err: 'Username is required'\r\n            })\r\n            isValid = false;\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                username_err: ''\r\n            })\r\n        }\r\n\r\n        if (pattern.test(email) === false) {\r\n            this.setState({\r\n                username_err: 'Username is not valid'\r\n            })\r\n            isValid = false;\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                username_err: ''\r\n            })\r\n        }\r\n\r\n        if ((password == '')) {\r\n            this.setState({\r\n                password_err: 'Password is required'\r\n            })\r\n            isValid = false;\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                password_err: ''\r\n            })\r\n        }\r\n\r\n        if (isValid) {\r\n            //console.log('Login Logic');\r\n            this.onLogin();\r\n        }\r\n    }\r\n\r\n    onLogin() {\r\n        let data = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.setState({\r\n            isLoading: true,\r\n        })\r\n        var response = loginAPI(data)\r\n            .then(res => {\r\n                //console.log(res);\r\n                let message = res.message;\r\n                let status = res.status;\r\n                let userDetails = res.user;\r\n                //console.log(userDetails);\r\n\r\n                if ((status == 1)) {\r\n                    //console.log('Login success');\r\n                    AsyncStorage.setItem('userInfo', JSON.stringify(userDetails));\r\n                    //this.props.navigation.navigate('ProfileScreen');\r\n                    this.props.navigation.navigate('MyTabs', { userInfo: userDetails });\r\n                    this.setState({\r\n                        email: '',\r\n                        password: '',\r\n                        api_resp: '',\r\n                        isLoading: false,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        api_resp: message,\r\n                        api_color: customstyles.alertdanger,\r\n                        isLoading: false,\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            api_resp: '',\r\n                            api_color: '',\r\n                        })\r\n                    }, 5000);\r\n                }\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    onMoveForgot = () => {\r\n        this.props.navigation.navigate('Forgot')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <LinearGradient colors={['#663792', '#3d418b', '#0a4487']} start={{ x: 0, y: .5 }} end={{ x: 1, y: 1 }} style={styles.linearGradient}\r\n            >\r\n                <View style={customstyles.logincontainer}>\r\n                    <View style={{ paddingVertical: 20 }}>\r\n                        <Text style={customstyles.headingWhite}>Login</Text>\r\n                    </View>\r\n                    {\r\n                        this.state.api_resp.length > 0 &&\r\n                        <Text style={customstyles.alertdanger}>{this.state.api_resp}</Text>\r\n                    }\r\n\r\n\r\n                    <TextInput\r\n                        autoCapitalize=\"none\"\r\n                        value={this.state.email}\r\n                        onChangeText={(email) => this.setState({ email })}\r\n                        placeholder={'Username'}\r\n                        style={customstyles.input}\r\n                        placeholderTextColor=\"#fff\"\r\n                    />\r\n                    {\r\n                        this.state.username_err.length > 0 &&\r\n                        <Text style={customstyles.alertdanger}>{this.state.username_err}</Text>\r\n                    }\r\n\r\n                    <TextInput\r\n                        autoCapitalize=\"none\"\r\n                        value={this.state.password}\r\n                        onChangeText={(password) => this.setState({ password })}\r\n                        placeholder={'Password'}\r\n                        secureTextEntry={true}\r\n                        style={customstyles.input}\r\n                        placeholderTextColor=\"#fff\"\r\n                    />\r\n                    {\r\n                        this.state.password_err.length > 0 &&\r\n                        <Text style={customstyles.alertdanger}>{this.state.password_err}</Text>\r\n                    }\r\n                    {/* <TouchableOpacity style={styles.appButtonContainer} onPress={this.validateInput.bind(this)} >\r\n                        <Text style={styles.appButtonText}>LOGIN</Text>\r\n                    </TouchableOpacity> */}\r\n                    <TouchableOpacity onPress={this.validateInput.bind(this)}>\r\n                        <View\r\n                            style={{\r\n                                ...styles.button,\r\n                                backgroundColor: this.state.isLoading ? \"#fff\" : \"#FFF\",\r\n                            }}\r\n                        >\r\n                            <Text style={styles.buttonText}>\r\n                                {this.state.isLoading ? \"LOGIN...\" : \"LOGIN\"}\r\n                            </Text>\r\n                            {this.state.isLoading && <Loader />}\r\n                        </View>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={this.onMoveForgot}>\r\n                        <Text style={customstyles.labelwhite}>Forgot Password</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </LinearGradient>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screenContainer: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n    },\r\n    linearGradient: {\r\n        flex: 1,\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        padding: 30,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#ecf0f1',\r\n    },\r\n    input: {\r\n        width: 200,\r\n        height: 44,\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        marginBottom: 10,\r\n    },\r\n    appButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 30,\r\n        paddingVertical: 15,\r\n        // paddingHorizontal: 12,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: -2, height: 6 },\r\n        shadowOpacity: 0.4,\r\n        shadowRadius: 7,\r\n    },\r\n    button: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n        padding: 10,\r\n        marginBottom: 20,\r\n        borderRadius: 30,\r\n        marginTop: 20,\r\n    },\r\n    buttonText: {\r\n        color: \"#663792\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 20\r\n    },\r\n});\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}