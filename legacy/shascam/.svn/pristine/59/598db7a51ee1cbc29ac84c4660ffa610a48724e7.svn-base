{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { loginAPI } from \"./functions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onMoveForgot = function () {\n      _this.props.navigation.navigate('Forgot');\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      username_err: '',\n      password_err: '',\n      api_resp: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"onLogin\",\n    value: function onLogin() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n\n      if (email == '') {\n        this.setState({\n          username_err: 'Username is required'\n        });\n        return;\n      } else {\n        this.setState({\n          username_err: ''\n        });\n      }\n\n      if (password == '') {\n        this.setState({\n          password_err: 'Password is required'\n        });\n        return;\n      } else {\n        this.setState({\n          password_err: ''\n        });\n      }\n\n      if (email != '' && password != '') {\n        console.log('Login Here');\n        var data = {\n          email: this.state.email,\n          password: this.state.password\n        };\n        var response = loginAPI(data).then(function (res) {\n          console.log(res);\n          var message = res.message;\n          var status = res.success;\n\n          if (status) {\n            console.log('Login success');\n          } else {\n            _this2.setState({\n              api_resp: message\n            });\n          }\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          children: this.state.api_resp\n        }), _jsx(TextInput, {\n          value: this.state.email,\n          onChangeText: function onChangeText(email) {\n            return _this3.setState({\n              email: email\n            });\n          },\n          placeholder: 'Username',\n          style: styles.input\n        }), _jsx(Text, {\n          children: this.state.username_err\n        }), _jsx(TextInput, {\n          value: this.state.password,\n          onChangeText: function onChangeText(password) {\n            return _this3.setState({\n              password: password\n            });\n          },\n          placeholder: 'Password',\n          secureTextEntry: true,\n          style: styles.input\n        }), _jsx(Text, {\n          children: this.state.password_err\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: this.onLogin.bind(this),\n          children: _jsx(Text, {\n            children: \"Login\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: this.onMoveForgot,\n          children: _jsx(Text, {\n            style: styles.appButtonText,\n            children: \"Forgot Password\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n    marginBottom: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["D:/IdentityWallet/components/LoginScreen.js"],"names":["React","Component","loginAPI","LoginScreen","props","onMoveForgot","navigation","navigate","state","email","password","username_err","password_err","api_resp","setState","console","log","data","response","then","res","message","status","success","catch","error","styles","container","input","button","onLogin","bind","appButtonText","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","height","padding","borderWidth","borderColor","marginBottom"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,SAASC,QAAT;;;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAiEnBC,YAjEmB,GAiEJ,YAAM;AACjB,YAAKD,KAAL,CAAWE,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B;AACH,KAnEkB;;AAGf,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,YAAY,EAAE,EAJL;AAKTC,MAAAA,QAAQ,EAAE;AALD,KAAb;AAHe;AAUlB;;;;WAED,mBAAU;AAAA;;AACN,wBAA4B,KAAKL,KAAjC;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,QAAf,eAAeA,QAAf;;AAEA,UAAKD,KAAK,IAAI,EAAd,EAAmB;AACf,aAAKK,QAAL,CAAc;AACVH,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGA;AACH,OALD,MAKO;AACH,aAAKG,QAAL,CAAc;AACVH,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;;AAED,UAAKD,QAAQ,IAAI,EAAjB,EAAsB;AAClB,aAAKI,QAAL,CAAc;AACVF,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGA;AACH,OALD,MAKO;AACH,aAAKE,QAAL,CAAc;AACVF,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;;AAED,UAAKH,KAAK,IAAI,EAAT,IAAeC,QAAQ,IAAI,EAAhC,EAAqC;AACjCK,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,YAAIC,IAAI,GAAG;AACPR,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADX;AAEPC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFd,SAAX;AAIA,YAAIQ,QAAQ,GAAGhB,QAAQ,CAACe,IAAD,CAAR,CACVE,IADU,CACL,UAAAC,GAAG,EAAI;AACTL,UAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,cAAIC,OAAO,GAAGD,GAAG,CAACC,OAAlB;AACA,cAAIC,MAAM,GAAGF,GAAG,CAACG,OAAjB;;AAEA,cAAKD,MAAL,EAAc;AACVP,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,WAFD,MAEO;AACH,YAAA,MAAI,CAACF,QAAL,CAAc;AACVD,cAAAA,QAAQ,EAAEQ;AADA,aAAd;AAGH;AACJ,SAbU,EAcVG,KAdU,CAcJ,UAAAC,KAAK;AAAA,iBAAIV,OAAO,CAACC,GAAR,CAAYS,KAAZ,CAAJ;AAAA,SAdD,CAAf;AAiBH;AAGJ;;;WAMD,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,mBAEI,KAAC,IAAD;AAAA,oBAAO,KAAKnB,KAAL,CAAWK;AAAlB,UAFJ,EAGI,KAAC,SAAD;AACI,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KADtB;AAEI,UAAA,YAAY,EAAE,sBAACA,KAAD;AAAA,mBAAW,MAAI,CAACK,QAAL,CAAc;AAAEL,cAAAA,KAAK,EAALA;AAAF,aAAd,CAAX;AAAA,WAFlB;AAGI,UAAA,WAAW,EAAE,UAHjB;AAII,UAAA,KAAK,EAAEiB,MAAM,CAACE;AAJlB,UAHJ,EASI,KAAC,IAAD;AAAA,oBAAO,KAAKpB,KAAL,CAAWG;AAAlB,UATJ,EAUI,KAAC,SAAD;AACI,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QADtB;AAEI,UAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,mBAAc,MAAI,CAACI,QAAL,CAAc;AAAEJ,cAAAA,QAAQ,EAARA;AAAF,aAAd,CAAd;AAAA,WAFlB;AAGI,UAAA,WAAW,EAAE,UAHjB;AAII,UAAA,eAAe,EAAE,IAJrB;AAKI,UAAA,KAAK,EAAEgB,MAAM,CAACE;AALlB,UAVJ,EAiBI,KAAC,IAAD;AAAA,oBAAO,KAAKpB,KAAL,CAAWI;AAAlB,UAjBJ,EAoBI,KAAC,gBAAD;AACI,UAAA,KAAK,EAAEc,MAAM,CAACG,MADlB;AAEI,UAAA,OAAO,EAAE,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAFb;AAAA,oBAII,KAAC,IAAD;AAAA;AAAA;AAJJ,UApBJ,EA2BI,KAAC,gBAAD;AACI,UAAA,KAAK,EAAEL,MAAM,CAACG,MADlB;AAEI,UAAA,OAAO,EAAE,KAAKxB,YAFlB;AAAA,oBAII,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEqB,MAAM,CAACM,aAApB;AAAA;AAAA;AAJJ,UA3BJ;AAAA,QADJ;AAoCH;;;;EA3GqB/B,S;;AA8G1B,IAAMyB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAO7BV,EAAAA,KAAK,EAAE;AACHW,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,OAAO,EAAE,EAHN;AAIHC,IAAAA,WAAW,EAAE,CAJV;AAKHC,IAAAA,WAAW,EAAE,OALV;AAMHC,IAAAA,YAAY,EAAE;AANX,GAPsB;AAe7Bf,EAAAA,MAAM,EAAE;AACJO,IAAAA,UAAU,EAAE,QADR;AAEJE,IAAAA,eAAe,EAAE,SAFb;AAGJG,IAAAA,OAAO,EAAE,EAHL;AAIJG,IAAAA,YAAY,EAAE;AAJV;AAfqB,CAAlB,CAAf;AAuBA,eAAezC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, TextInput, View, StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport { loginAPI } from './functions';\r\n\r\nclass LoginScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            username_err: '',\r\n            password_err: '',\r\n            api_resp: '',\r\n        };\r\n    }\r\n\r\n    onLogin() {\r\n        const { email, password } = this.state;\r\n        //Alert.alert('Credentials', `${username} + ${password}`);\r\n        if ((email == '')) {\r\n            this.setState({\r\n                username_err: 'Username is required'\r\n            })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                username_err: ''\r\n            })\r\n        }\r\n\r\n        if ((password == '')) {\r\n            this.setState({\r\n                password_err: 'Password is required'\r\n            })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                password_err: ''\r\n            })\r\n        }\r\n\r\n        if ((email != '' && password != '')) {\r\n            console.log('Login Here');\r\n            let data = {\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }\r\n            var response = loginAPI(data)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    let message = res.message;\r\n                    let status = res.success;\r\n\r\n                    if ((status)) {\r\n                        console.log('Login success');\r\n                    } else {\r\n                        this.setState({\r\n                            api_resp: message\r\n                        })\r\n                    }\r\n                })\r\n                .catch(error => console.log(error));\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMoveForgot = () => {\r\n        this.props.navigation.navigate('Forgot')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                <Text>{this.state.api_resp}</Text>\r\n                <TextInput\r\n                    value={this.state.email}\r\n                    onChangeText={(email) => this.setState({ email })}\r\n                    placeholder={'Username'}\r\n                    style={styles.input}\r\n                />\r\n                <Text>{this.state.username_err}</Text>\r\n                <TextInput\r\n                    value={this.state.password}\r\n                    onChangeText={(password) => this.setState({ password })}\r\n                    placeholder={'Password'}\r\n                    secureTextEntry={true}\r\n                    style={styles.input}\r\n                />\r\n                <Text>{this.state.password_err}</Text>\r\n\r\n\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={this.onLogin.bind(this)}\r\n                >\r\n                    <Text>Login</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={this.onMoveForgot}\r\n                >\r\n                    <Text style={styles.appButtonText}>Forgot Password</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#ecf0f1',\r\n    },\r\n    input: {\r\n        width: 200,\r\n        height: 44,\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        marginBottom: 10,\r\n    },\r\n    button: {\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#DDDDDD\",\r\n        padding: 10,\r\n        marginBottom: 20,\r\n    },\r\n});\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}