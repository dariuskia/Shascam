{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { userDetailById, updateProfile, getCountryList, getTitles, getIdTypes, getMobileCountry, getNationalities, getGenders, getMarriageTitles } from \"./functions\";\nimport Loader from \"./Loader\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { customstyles } from \"../customstyle\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Picker } from \"@react-native-picker/picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EditProfile = function (_Component) {\n  _inherits(EditProfile, _Component);\n\n  var _super = _createSuper(EditProfile);\n\n  function EditProfile() {\n    var _this;\n\n    _classCallCheck(this, EditProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      user_id: '',\n      title: '',\n      id_type: '',\n      id_number: '',\n      fname: '',\n      middle_name: '',\n      lname: '',\n      preferred_name: '',\n      user_email: '',\n      isd_code: '',\n      phone: '',\n      gender: '',\n      dob: '',\n      address: '',\n      income_year: '',\n      yearly_income: '',\n      industry: '',\n      isLoading: false,\n      school_attended: '',\n      nationality: '',\n      marital_status: '',\n      dataLoading: false,\n      api_resp: '',\n      fname_err: '',\n      lname_err: '',\n      userTitles: [],\n      userIdTypes: [],\n      userMobileCountries: [],\n      userNationality: [],\n      userGenders: [],\n      userMarriageTitle: []\n    };\n\n    _this.getTitles = function () {\n      var resp = getTitles().then(function (resp) {\n        var result = resp.data;\n\n        _this.setState({\n          userTitles: result\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.getIdTypes = function () {\n      var resp = getIdTypes().then(function (resp) {\n        var result = resp.data;\n\n        _this.setState({\n          userIdTypes: result\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.getMobileCountry = function () {\n      var resp = getMobileCountry().then(function (resp) {\n        var result = resp.data;\n\n        _this.setState({\n          userMobileCountries: result\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.getNationalities = function () {\n      var resp = getNationalities().then(function (resp) {\n        var result = resp.data;\n\n        _this.setState({\n          userNationality: result\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.getGenders = function () {\n      var resp = getGenders().then(function (resp) {\n        var result = resp.data;\n\n        _this.setState({\n          userGenders: result\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.getMarriageTitles = function () {\n      var resp = getMarriageTitles().then(function (resp) {\n        var result = resp.data;\n\n        _this.setState({\n          userMarriageTitle: result\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.getUser = function (user_id) {\n      console.log(user_id);\n      var resp = userDetailById(user_id).then(function (resp) {\n        _this.setState({\n          dataLoading: false\n        });\n\n        var result = resp.data;\n\n        _this.setState({\n          title: result.title,\n          id_type: result.mm_id_type,\n          fname: result.fname,\n          id_number: result.mm_id_number,\n          middle_name: result.middle_name,\n          lname: result.lname,\n          preferred_name: result.preferred_name,\n          user_email: result.email,\n          isd_code: result.isd_code,\n          phone: result.phone,\n          dob: result.dob,\n          gender: result.gender,\n          address: result.address,\n          income_year: result.income_year,\n          yearly_income: result.yearly_income,\n          industry: result.industry,\n          nationality: result.mm_nationalities,\n          school_attended: result.school_attended,\n          marital_status: result.marital_status\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.setTitle = function (value) {\n      _this.setState({\n        title: value\n      });\n    };\n\n    _this.setIdType = function (value) {\n      _this.setState({\n        id_type: value\n      });\n    };\n\n    _this.setMobileCountry = function (value) {\n      _this.setState({\n        isd_code: value\n      });\n    };\n\n    _this.setGender = function (value) {\n      _this.setState({\n        gender: value\n      });\n    };\n\n    _this.setMarital = function (value) {\n      _this.setState({\n        marital_status: value\n      });\n    };\n\n    _this.schoolAttended = function (value) {\n      _this.setState({\n        school_attended: value\n      });\n    };\n\n    _this.setNationality = function (value) {\n      _this.setState({\n        nationality: value\n      });\n    };\n\n    _this.validateInput = function () {\n      var _this$state = _this.state,\n          fname = _this$state.fname,\n          lname = _this$state.lname;\n\n      if (fname == '') {\n        Alert.alert('First name is required');\n        return;\n      } else {\n        _this.setState({\n          fname_err: ''\n        });\n      }\n\n      if (lname == '') {\n        Alert.alert('Last name is required');\n        return;\n      } else {\n        _this.setState({\n          lname_err: ''\n        });\n      }\n\n      if (fname != '' && lname != '') {\n        _this.updateProfile();\n      }\n    };\n\n    _this.updateProfile = function () {\n      var data = {\n        id: _this.state.user_id,\n        title: _this.state.title,\n        id_type: _this.state.id_type,\n        id_number: _this.state.id_number,\n        fname: _this.state.fname,\n        lname: _this.state.lname,\n        middle_name: _this.state.middle_name,\n        preferred_name: _this.state.preferred_name,\n        isd_code: _this.state.isd_code,\n        dob: _this.state.dob,\n        gender: _this.state.gender,\n        address: _this.state.address,\n        marital_status: _this.state.marital_status,\n        income_year: _this.state.income_year,\n        yearly_income: _this.state.yearly_income,\n        industry: _this.state.industry,\n        school_attended: _this.state.school_attended,\n        nationality: _this.state.nationality\n      };\n      console.log(data);\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var resp = updateProfile(data).then(function (resp) {\n        var message = resp.message;\n        var status = resp.status;\n        console.log(message);\n\n        if (status == 1) {\n          _this.setState({\n            api_resp: message,\n            isLoading: false\n          });\n\n          setTimeout(function () {\n            _this.setState({\n              api_resp: ''\n            });\n\n            _this.props.navigation.goBack();\n          }, 5000);\n        } else {\n          _this.setState({\n            isLoading: false,\n            api_resp: message\n          });\n\n          setTimeout(function () {\n            _this.setState({\n              api_resp: ''\n            });\n          }, 5000);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userData = this.props.route.params.userDetails;\n      this.getUser(userData.id);\n      this.getTitles();\n      this.getIdTypes();\n      this.getMobileCountry();\n      this.getNationalities();\n      this.getGenders();\n      this.getMarriageTitles();\n      this.setState({\n        dataLoading: true,\n        user_id: userData.id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.dataLoading) {\n        return _jsx(Loader, {});\n      }\n\n      return _jsx(SafeAreaView, {\n        style: styles.scrollArea,\n        children: _jsxs(ScrollView, {\n          style: styles.innerView,\n          children: [_jsx(View, {\n            style: customstyles.py20,\n            children: _jsx(Text, {\n              size: \"xxlarge\",\n              style: customstyles.heading,\n              children: \"EDIT Profile\"\n            })\n          }), _jsxs(View, {\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return _this2.props.navigation.goBack();\n              },\n              style: [customstyles.btnThemecircle, {\n                width: 36,\n                height: 36,\n                marginBottom: 30\n              }],\n              children: _jsx(Ionicons, {\n                name: \"md-chevron-back-outline\",\n                size: 24,\n                color: \"white\"\n              })\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Select Title\"\n            }), _jsx(View, {\n              style: customstyles.dropdownBoxTheme,\n              children: _jsxs(Picker, {\n                selectedValue: this.state.title,\n                onValueChange: function onValueChange(value, index) {\n                  return _this2.setTitle(value);\n                },\n                mode: \"dropdown\",\n                style: customstyles.dropdowntheme,\n                dropdownIconColor: \"#663792\",\n                children: [_jsx(Picker.Item, {\n                  label: \"Select Title\",\n                  value: \"\",\n                  color: \"black\"\n                }), this.state.userTitles ? this.state.userTitles.map(function (item, i) {\n                  return _jsx(Picker.Item, {\n                    label: item.code,\n                    selectedValue: _this2.state.title == item.code ? true : false,\n                    value: item.code,\n                    color: \"black\"\n                  }, i);\n                }) : _jsx(Picker.Item, {\n                  label: \"No Data\",\n                  value: \"0\",\n                  color: \"black\"\n                })]\n              })\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Select Id Type\"\n            }), _jsx(View, {\n              style: customstyles.dropdownBoxTheme,\n              children: _jsxs(Picker, {\n                selectedValue: this.state.id_type,\n                onValueChange: function onValueChange(value, index) {\n                  return _this2.setIdType(value);\n                },\n                mode: \"dropdown\",\n                style: customstyles.dropdowntheme,\n                children: [_jsx(Picker.Item, {\n                  label: \"Select Id Types\",\n                  value: \"\",\n                  color: \"black\"\n                }), this.state.userIdTypes ? this.state.userIdTypes.map(function (item, i) {\n                  return _jsx(Picker.Item, {\n                    label: item.description,\n                    selectedValue: _this2.state.id_type == item.description ? true : false,\n                    value: item.code,\n                    color: \"black\"\n                  }, i);\n                }) : _jsx(Picker.Item, {\n                  label: \"No Data\",\n                  value: \"0\"\n                })]\n              })\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Id Number\"\n            }), _jsx(TextInput, {\n              name: \"id_number\",\n              placeholder: 'Id Number',\n              value: this.state.id_number ? this.state.id_number : '',\n              onChangeText: function onChangeText(id_number) {\n                return _this2.setState({\n                  id_number: id_number\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"First Name\"\n            }), _jsx(TextInput, {\n              name: \"fname\",\n              placeholder: 'First Name',\n              value: this.state.fname ? this.state.fname : '',\n              onChangeText: function onChangeText(fname) {\n                return _this2.setState({\n                  fname: fname\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), this.state.fname_err.length > 0 && _jsx(Text, {\n              style: customstyles.alertdanger,\n              children: this.state.fname_err\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Middle Name\"\n            }), _jsx(TextInput, {\n              name: \"middle_name\",\n              placeholder: 'Middle Name',\n              value: this.state.middle_name ? this.state.middle_name : '',\n              onChangeText: function onChangeText(middle_name) {\n                return _this2.setState({\n                  middle_name: middle_name\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Last Name\"\n            }), _jsx(TextInput, {\n              name: \"lname\",\n              placeholder: 'Last Name',\n              value: this.state.lname ? this.state.lname : '',\n              onChangeText: function onChangeText(lname) {\n                return _this2.setState({\n                  lname: lname\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), this.state.lname_err.length > 0 && _jsx(Text, {\n              style: customstyles.alertdanger,\n              children: this.state.lname_err\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Preferred Name\"\n            }), _jsx(TextInput, {\n              name: \"preferred_name\",\n              placeholder: 'Pref Name',\n              value: this.state.preferred_name ? this.state.preferred_name : '',\n              onChangeText: function onChangeText(preferred_name) {\n                return _this2.setState({\n                  preferred_name: preferred_name\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Email \"\n            }), _jsx(TextInput, {\n              name: \"email\",\n              placeholder: 'Email',\n              editable: false,\n              selectTextOnFocus: false,\n              value: this.state.user_email ? this.state.user_email : '',\n              style: [customstyles.inputtheme, {\n                marginBottom: 10,\n                backgroundColor: '#e0dede'\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Mobile Country Code\"\n            }), _jsx(View, {\n              style: customstyles.dropdownBoxTheme,\n              children: _jsxs(Picker, {\n                selectedValue: this.state.isd_code,\n                onValueChange: function onValueChange(value, index) {\n                  return _this2.setMobileCountry(value);\n                },\n                mode: \"dropdown\",\n                style: customstyles.dropdowntheme,\n                children: [_jsx(Picker.Item, {\n                  label: \"Select Country Code\",\n                  value: \"\",\n                  color: \"black\"\n                }), this.state.userMobileCountries ? this.state.userMobileCountries.map(function (item, i) {\n                  return _jsx(Picker.Item, {\n                    label: '+' + item.description,\n                    selectedValue: item.description == _this2.state.isd_code ? true : false,\n                    value: item.description,\n                    color: \"black\"\n                  }, i);\n                }) : _jsx(Picker.Item, {\n                  label: \"No Data\",\n                  value: \"0\"\n                })]\n              })\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Phone Number\"\n            }), _jsx(TextInput, {\n              name: \"phone\",\n              placeholder: 'Phone',\n              value: this.state.phone ? this.state.phone : '',\n              editable: false,\n              selectTextOnFocus: false,\n              style: [customstyles.inputtheme, {\n                marginBottom: 10,\n                backgroundColor: '#e0dede'\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Date Of Birth\"\n            }), _jsx(TextInput, {\n              name: \"dob\",\n              placeholder: 'DOB',\n              value: this.state.dob ? this.state.dob : '',\n              onChangeText: function onChangeText(dob) {\n                return _this2.setState({\n                  dob: dob\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Select Gender\"\n            }), _jsx(View, {\n              style: customstyles.dropdownBoxTheme,\n              children: _jsxs(Picker, {\n                selectedValue: this.state.gender,\n                onValueChange: function onValueChange(value, index) {\n                  return _this2.setGender(value);\n                },\n                mode: \"dropdown\",\n                style: customstyles.dropdowntheme,\n                children: [_jsx(Picker.Item, {\n                  label: \"Select Gender\",\n                  value: \"\",\n                  color: \"black\"\n                }), this.state.userGenders ? this.state.userGenders.map(function (item, i) {\n                  return _jsx(Picker.Item, {\n                    label: item.description,\n                    selectedValue: _this2.state.gender == item.description ? true : false,\n                    value: item.description,\n                    color: \"black\"\n                  }, i);\n                }) : _jsx(Picker.Item, {\n                  label: \"No Data\",\n                  value: \"0\"\n                })]\n              })\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Address\"\n            }), _jsx(TextInput, {\n              name: \"address\",\n              placeholder: 'Address',\n              value: this.state.address ? this.state.address : '',\n              onChangeText: function onChangeText(address) {\n                return _this2.setState({\n                  address: address\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Marital Status\"\n            }), _jsx(View, {\n              style: customstyles.dropdownBoxTheme,\n              children: _jsxs(Picker, {\n                selectedValue: this.state.marital_status,\n                onValueChange: function onValueChange(value, index) {\n                  return _this2.setMarital(value);\n                },\n                mode: \"dropdown\",\n                style: customstyles.dropdowntheme,\n                children: [_jsx(Picker.Item, {\n                  label: \"Select Marital Status\",\n                  value: \"\",\n                  color: \"black\"\n                }), this.state.userMarriageTitle ? this.state.userMarriageTitle.map(function (item, i) {\n                  return _jsx(Picker.Item, {\n                    label: item.description,\n                    selectedValue: _this2.state.marital_status == item.description,\n                    value: item.description,\n                    color: \"black\"\n                  }, i);\n                }) : _jsx(Picker.Item, {\n                  label: \"No Data\",\n                  value: \"0\"\n                })]\n              })\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Income Year\"\n            }), _jsx(TextInput, {\n              name: \"income_year\",\n              placeholder: 'Income Year',\n              value: this.state.income_year != '' ? this.state.income_year : '',\n              onChangeText: function onChangeText(income_year) {\n                return _this2.setState({\n                  income_year: income_year\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Yearly Income\"\n            }), _jsx(TextInput, {\n              placeholder: 'Yearly Income',\n              value: this.state.yearly_income ? this.state.yearly_income : '',\n              onChangeText: function onChangeText(yearly_income) {\n                return _this2.setState({\n                  yearly_income: yearly_income\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Industry\"\n            }), _jsx(TextInput, {\n              placeholder: 'Industry Income',\n              value: this.state.industry ? this.state.industry : '',\n              onChangeText: function onChangeText(industry) {\n                return _this2.setState({\n                  industry: industry\n                });\n              },\n              style: [customstyles.inputtheme, {\n                marginBottom: 10\n              }]\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"School Attended\"\n            }), _jsx(View, {\n              style: customstyles.dropdownBoxTheme,\n              children: _jsxs(Picker, {\n                selectedValue: this.state.school_attended,\n                onValueChange: function onValueChange(value, index) {\n                  return _this2.schoolAttended(value);\n                },\n                mode: \"dropdown\",\n                style: customstyles.dropdowntheme,\n                children: [_jsx(Picker.Item, {\n                  label: \"School Attended\",\n                  value: \"\",\n                  color: \"black\"\n                }), _jsx(Picker.Item, {\n                  label: \"Yes\",\n                  value: \"1\",\n                  selectedValue: this.state.school_attended == 1 ? true : false,\n                  color: \"black\"\n                }), _jsx(Picker.Item, {\n                  label: \"No\",\n                  value: \"0\",\n                  selectedValue: this.state.school_attended == 0 ? true : false,\n                  color: \"black\"\n                })]\n              })\n            }), _jsx(Text, {\n              style: [customstyles.textpurple, {\n                marginBottom: 3\n              }],\n              children: \"Country Of Issue\"\n            }), _jsx(View, {\n              style: customstyles.dropdownBoxTheme,\n              children: _jsxs(Picker, {\n                selectedValue: this.state.nationality,\n                onValueChange: function onValueChange(value, index) {\n                  return _this2.setNationality(value);\n                },\n                mode: \"dropdown\",\n                style: customstyles.dropdowntheme,\n                children: [_jsx(Picker.Item, {\n                  label: \"Select Nationality\",\n                  value: \"\",\n                  color: \"black\"\n                }), this.state.userNationality ? this.state.userNationality.map(function (item, i) {\n                  return _jsx(Picker.Item, {\n                    label: item.code,\n                    selectedValue: _this2.state.nationality == item.code ? item.code : '',\n                    value: item.code,\n                    color: \"black\"\n                  }, i);\n                }) : _jsx(Picker.Item, {\n                  label: \"No Data\",\n                  value: \"0\"\n                })]\n              })\n            }), this.state.api_resp.length > 0 && _jsx(Text, {\n              style: {\n                color: 'green'\n              },\n              children: this.state.api_resp\n            }), _jsx(TouchableOpacity, {\n              onPress: this.validateInput.bind(this),\n              children: _jsx(View, {\n                style: customstyles.btnTheme,\n                children: _jsx(Text, {\n                  style: customstyles.btnthemeText,\n                  children: this.state.isLoading ? \"Updating...\" : \"Update\"\n                })\n              })\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return EditProfile;\n}(Component);\n\nvar styles = StyleSheet.create({\n  linearGradient: {\n    flex: 1,\n    width: \"100%\"\n  },\n  scrollArea: {\n    flex: 1,\n    width: \"100%\",\n    paddingTop: StatusBar.currentHeight\n  },\n  innerView: {\n    height: \"100%\",\n    paddingHorizontal: 20\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    padding: 10,\n    marginBottom: 20,\n    borderRadius: 30\n  },\n  buttonText: {\n    color: \"#663792\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10\n  },\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#fff\",\n    borderRadius: 30,\n    paddingVertical: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: -2,\n      height: 6\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 7\n  },\n  datePickerStyle: {\n    width: 200,\n    marginTop: 20\n  },\n  picker: {\n    marginVertical: 30,\n    width: 300,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    color: '#fff'\n  }\n});\nexport default EditProfile;","map":{"version":3,"sources":["D:/IdentityWallet/components/EditProfile.js"],"names":["React","Component","useState","userDetailById","updateProfile","getCountryList","getTitles","getIdTypes","getMobileCountry","getNationalities","getGenders","getMarriageTitles","Loader","Ionicons","customstyles","LinearGradient","Picker","EditProfile","state","user_id","title","id_type","id_number","fname","middle_name","lname","preferred_name","user_email","isd_code","phone","gender","dob","address","income_year","yearly_income","industry","isLoading","school_attended","nationality","marital_status","dataLoading","api_resp","fname_err","lname_err","userTitles","userIdTypes","userMobileCountries","userNationality","userGenders","userMarriageTitle","resp","then","result","data","setState","catch","error","console","log","getUser","mm_id_type","mm_id_number","email","mm_nationalities","setTitle","value","setIdType","setMobileCountry","setGender","setMarital","schoolAttended","setNationality","validateInput","Alert","alert","id","message","status","setTimeout","props","navigation","goBack","userData","route","params","userDetails","styles","scrollArea","innerView","py20","heading","btnThemecircle","width","height","marginBottom","textpurple","dropdownBoxTheme","index","dropdowntheme","map","item","i","code","description","inputtheme","length","alertdanger","backgroundColor","color","bind","btnTheme","btnthemeText","StyleSheet","create","linearGradient","flex","paddingTop","StatusBar","currentHeight","paddingHorizontal","container","alignItems","justifyContent","button","display","flexDirection","padding","borderRadius","buttonText","fontWeight","fontSize","input","borderWidth","borderColor","appButtonContainer","elevation","paddingVertical","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","datePickerStyle","picker","marginVertical"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { Alert, Button, TextInput, View, StyleSheet, Text, ToastAndroid, ActivityIndicator, SafeAreaView, ScrollView, StatusBar, TouchableOpacity } from 'react-native';\r\n//import DateTimePicker from '@react-native-community/datetimepicker';\r\nimport { userDetailById, updateProfile, getCountryList, getTitles, getIdTypes, getMobileCountry, getNationalities, getGenders, getMarriageTitles } from './functions';\r\nimport Loader from './Loader';\r\n\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { customstyles } from \"../customstyle\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nclass EditProfile extends Component {\r\n    state = {\r\n        user_id: '',\r\n        title: '',\r\n        id_type: '',\r\n        id_number: '',\r\n        fname: '',\r\n        middle_name: '',\r\n        lname: '',\r\n        preferred_name: '',\r\n        user_email: '',\r\n        isd_code: '',\r\n        phone: '',\r\n        gender: '',\r\n        dob: '',\r\n        address: '',\r\n        income_year: '',\r\n        yearly_income: '',\r\n        industry: '',\r\n        isLoading: false,\r\n        school_attended: '',\r\n        nationality: '',\r\n        marital_status: '',\r\n        dataLoading: false,\r\n        api_resp: '',\r\n\r\n        fname_err: '',\r\n        lname_err: '',\r\n\r\n        userTitles: [],\r\n        userIdTypes: [],\r\n        userMobileCountries: [],\r\n        userNationality: [],\r\n        userGenders: [],\r\n        userMarriageTitle: [],\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userData = this.props.route.params.userDetails;\r\n        //console.log(userData);\r\n        this.getUser(userData.id);\r\n        this.getTitles();\r\n        this.getIdTypes();\r\n        this.getMobileCountry();\r\n        this.getNationalities();\r\n        this.getGenders();\r\n        this.getMarriageTitles();\r\n        this.setState({\r\n            dataLoading: true,\r\n            user_id: userData.id,\r\n        });\r\n    }\r\n\r\n    // Dropdown Lisitngs\r\n    getTitles = () => {\r\n        var resp = getTitles()\r\n            .then(resp => {\r\n                let result = resp.data;\r\n                //console.log(result);\r\n                this.setState({\r\n                    userTitles: result\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    getIdTypes = () => {\r\n        var resp = getIdTypes()\r\n            .then(resp => {\r\n                let result = resp.data;\r\n                //console.log(result);\r\n                this.setState({\r\n                    userIdTypes: result\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    getMobileCountry = () => {\r\n        var resp = getMobileCountry()\r\n            .then(resp => {\r\n                let result = resp.data;\r\n                this.setState({\r\n                    userMobileCountries: result\r\n                })\r\n                //console.log(result);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    getNationalities = () => {\r\n        var resp = getNationalities()\r\n            .then(resp => {\r\n                let result = resp.data;\r\n                this.setState({\r\n                    userNationality: result\r\n                })\r\n                //console.log(result);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    getGenders = () => {\r\n        var resp = getGenders()\r\n            .then(resp => {\r\n                let result = resp.data;\r\n                //console.log(result);\r\n                this.setState({\r\n                    userGenders: result\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    getMarriageTitles = () => {\r\n        var resp = getMarriageTitles()\r\n            .then(resp => {\r\n                let result = resp.data;\r\n                //console.log(result);\r\n                this.setState({\r\n                    userMarriageTitle: result\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    // Close\r\n\r\n    getUser = (user_id) => {\r\n        console.log(user_id);\r\n        var resp = userDetailById(user_id)\r\n            .then(resp => {\r\n                this.setState({\r\n                    dataLoading: false\r\n                });\r\n                let result = resp.data;\r\n                //console.log(result);\r\n                this.setState({\r\n                    title: result.title,\r\n                    id_type: result.mm_id_type,\r\n                    fname: result.fname,\r\n                    id_number: result.mm_id_number,\r\n                    middle_name: result.middle_name,\r\n                    lname: result.lname,\r\n                    preferred_name: result.preferred_name,\r\n                    user_email: result.email,\r\n                    isd_code: result.isd_code,\r\n                    phone: result.phone,\r\n                    dob: result.dob,\r\n                    gender: result.gender,\r\n                    address: result.address,\r\n                    income_year: result.income_year,\r\n                    yearly_income: result.yearly_income,\r\n                    industry: result.industry,\r\n                    nationality: result.mm_nationalities,\r\n                    school_attended: result.school_attended,\r\n                    marital_status: result.marital_status\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    // Picker Item Selections::\r\n    setTitle = (value) => {\r\n        //console.log(value);\r\n        this.setState({\r\n            title: value\r\n        });\r\n    }\r\n\r\n    setIdType = (value) => {\r\n        //console.log(value);\r\n        this.setState({\r\n            id_type: value\r\n        });\r\n    }\r\n\r\n    setMobileCountry = (value) => {\r\n        //console.log(value);\r\n        this.setState({\r\n            isd_code: value\r\n        });\r\n    }\r\n\r\n    setGender = (value) => {\r\n        //console.log(value);\r\n        this.setState({\r\n            gender: value\r\n        });\r\n    }\r\n\r\n    setMarital = (value) => {\r\n        //console.log(value);\r\n        this.setState({\r\n            marital_status: value\r\n        });\r\n    }\r\n\r\n    schoolAttended = (value) => {\r\n        //console.log(value);\r\n        this.setState({\r\n            school_attended: value\r\n        });\r\n    }\r\n\r\n    setNationality = (value) => {\r\n        //console.log(value);\r\n        this.setState({\r\n            nationality: value\r\n        });\r\n    }\r\n    // Close\r\n\r\n    validateInput = () => {\r\n        const { fname, lname } = this.state;\r\n        if ((fname == '')) {\r\n            Alert.alert('First name is required');\r\n            // this.setState({\r\n            //     fname_err: 'First name is required'\r\n            // })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                fname_err: ''\r\n            })\r\n        }\r\n\r\n        if ((lname == '')) {\r\n            Alert.alert('Last name is required');\r\n            // this.setState({\r\n            //     lname_err: 'Last name is required'\r\n            // })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                lname_err: ''\r\n            })\r\n        }\r\n\r\n        if ((fname != '') && (lname != '')) {\r\n            this.updateProfile();\r\n        }\r\n    }\r\n\r\n    updateProfile = () => {\r\n\r\n        let data = {\r\n            id: this.state.user_id,\r\n            title: this.state.title,\r\n            id_type: this.state.id_type,\r\n            id_number: this.state.id_number,\r\n            fname: this.state.fname,\r\n            lname: this.state.lname,\r\n            middle_name: this.state.middle_name,\r\n            preferred_name: this.state.preferred_name,\r\n            isd_code: this.state.isd_code,\r\n            dob: this.state.dob,\r\n            gender: this.state.gender,\r\n            address: this.state.address,\r\n            marital_status: this.state.marital_status,\r\n            income_year: this.state.income_year,\r\n            yearly_income: this.state.yearly_income,\r\n            industry: this.state.industry,\r\n            school_attended: this.state.school_attended,\r\n            nationality: this.state.nationality,\r\n        }\r\n\r\n        console.log(data);\r\n\r\n        this.setState({\r\n            isLoading: true,\r\n        })\r\n\r\n        var resp = updateProfile(data)\r\n            .then(resp => {\r\n                let message = resp.message;\r\n                let status = resp.status;\r\n                console.log(message);\r\n                if ((status == 1)) {\r\n                    //Alert.alert(message);\r\n                    this.setState({\r\n                        api_resp: message,\r\n                        isLoading: false,\r\n                    });\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            api_resp: '',\r\n                        })\r\n                        this.props.navigation.goBack();\r\n                    }, 5000)\r\n                } else {\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        api_resp: message,\r\n                    });\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            api_resp: '',\r\n                        })\r\n                    }, 5000)\r\n                    //Alert.alert('Error in Profile update');\r\n                }\r\n                //console.log(result);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.dataLoading) {\r\n            return <Loader />;\r\n        }\r\n\r\n        return (\r\n\r\n            <SafeAreaView style={styles.scrollArea}>\r\n                <ScrollView style={styles.innerView}>\r\n                    <View style={customstyles.py20}>\r\n                        <Text size=\"xxlarge\" style={customstyles.heading}>EDIT Profile</Text>\r\n                    </View>\r\n                    <View>\r\n                        <TouchableOpacity onPress={() => this.props.navigation.goBack()} style={[customstyles.btnThemecircle, { width: 36, height: 36, marginBottom: 30 }]}>\r\n                            <Ionicons name=\"md-chevron-back-outline\" size={24} color=\"white\" />\r\n                        </TouchableOpacity>\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Select Title</Text>\r\n                        <View style={customstyles.dropdownBoxTheme}>\r\n                            <Picker\r\n                                selectedValue={this.state.title}\r\n                                onValueChange={(value, index) => this.setTitle(value)}\r\n                                mode=\"dropdown\" // Android only\r\n                                style={customstyles.dropdowntheme} dropdownIconColor='#663792'\r\n                            >\r\n                                <Picker.Item label=\"Select Title\" value=\"\" color='black' />\r\n                                {\r\n                                    this.state.userTitles ?\r\n                                        this.state.userTitles.map((item, i) => (\r\n                                            <Picker.Item key={i} label={item.code} selectedValue={this.state.title == item.code ? true : false} value={item.code} color='black' />\r\n                                        ))\r\n                                        : <Picker.Item label='No Data' value='0' color='black' />\r\n                                }\r\n                            </Picker>\r\n                        </View>\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Select Id Type</Text>\r\n                        <View style={customstyles.dropdownBoxTheme}>\r\n                            <Picker\r\n                                selectedValue={this.state.id_type}\r\n                                onValueChange={(value, index) => this.setIdType(value)}\r\n                                mode=\"dropdown\" // Android only\r\n                                style={customstyles.dropdowntheme}\r\n                            >\r\n                                <Picker.Item label='Select Id Types' value='' color='black' />\r\n                                {\r\n                                    this.state.userIdTypes ?\r\n                                        this.state.userIdTypes.map((item, i) => (\r\n                                            <Picker.Item key={i} label={item.description} selectedValue={this.state.id_type == item.description ? true : false} value={item.code} color=\"black\" />\r\n                                        ))\r\n                                        : <Picker.Item label='No Data' value='0' />\r\n                                }\r\n                            </Picker>\r\n                        </View>\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Id Number</Text>\r\n                        <TextInput\r\n                            name=\"id_number\" placeholder={'Id Number'}\r\n                            value={this.state.id_number ? this.state.id_number : ''}\r\n                            onChangeText={(id_number) => this.setState({ id_number })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]} />\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>First Name</Text>\r\n                        <TextInput\r\n                            name=\"fname\" placeholder={'First Name'}\r\n                            value={this.state.fname ? this.state.fname : ''}\r\n                            onChangeText={(fname) => this.setState({ fname })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]}\r\n                        />\r\n\r\n                        {\r\n                            this.state.fname_err.length > 0 &&\r\n                            <Text style={customstyles.alertdanger}>{this.state.fname_err}</Text>\r\n                        }\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Middle Name</Text>\r\n                        <TextInput\r\n                            name=\"middle_name\" placeholder={'Middle Name'}\r\n                            value={this.state.middle_name ? this.state.middle_name : ''}\r\n                            onChangeText={(middle_name) => this.setState({ middle_name })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]}\r\n                        />\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Last Name</Text>\r\n                        <TextInput\r\n                            name=\"lname\" placeholder={'Last Name'}\r\n                            value={this.state.lname ? this.state.lname : ''}\r\n                            onChangeText={(lname) => this.setState({ lname })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]}\r\n                        />\r\n                        {\r\n                            this.state.lname_err.length > 0 &&\r\n                            <Text style={customstyles.alertdanger}>{this.state.lname_err}</Text>\r\n                        }\r\n\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Preferred Name</Text>\r\n                        <TextInput\r\n                            name=\"preferred_name\" placeholder={'Pref Name'}\r\n                            value={this.state.preferred_name ? this.state.preferred_name : ''}\r\n                            onChangeText={(preferred_name) => this.setState({ preferred_name })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]}\r\n                        />\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Email </Text>\r\n                        <TextInput\r\n                            name=\"email\" placeholder={'Email'}\r\n                            editable={false}\r\n                            selectTextOnFocus={false}\r\n                            value={this.state.user_email ? this.state.user_email : ''}\r\n\r\n                            style={[customstyles.inputtheme, { marginBottom: 10, backgroundColor: '#e0dede' }]}\r\n                        />\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Mobile Country Code</Text>\r\n                        <View style={customstyles.dropdownBoxTheme}>\r\n                            <Picker\r\n                                selectedValue={this.state.isd_code}\r\n                                onValueChange={(value, index) => this.setMobileCountry(value)}\r\n                                mode=\"dropdown\" // Android only\r\n                                style={customstyles.dropdowntheme}\r\n                            >\r\n                                <Picker.Item label=\"Select Country Code\" value=\"\" color='black' />\r\n                                {\r\n                                    this.state.userMobileCountries ?\r\n                                        this.state.userMobileCountries.map((item, i) => (\r\n                                            <Picker.Item key={i} label={'+' + item.description} selectedValue={item.description == this.state.isd_code ? true : false} value={item.description} color=\"black\" />\r\n                                        ))\r\n                                        : <Picker.Item label='No Data' value='0' />\r\n                                }\r\n                            </Picker>\r\n                        </View>\r\n\r\n\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Phone Number</Text>\r\n                        <TextInput\r\n                            name=\"phone\" placeholder={'Phone'}\r\n                            value={this.state.phone ? this.state.phone : ''}\r\n                            editable={false}\r\n                            selectTextOnFocus={false}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10, backgroundColor: '#e0dede' }]}\r\n                        />\r\n\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Date Of Birth</Text>\r\n                        <TextInput\r\n                            name=\"dob\" placeholder={'DOB'}\r\n                            value={this.state.dob ? this.state.dob : ''}\r\n                            onChangeText={(dob) => this.setState({ dob })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]}\r\n                        />\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Select Gender</Text>\r\n                        <View style={customstyles.dropdownBoxTheme}>\r\n                            <Picker\r\n                                selectedValue={this.state.gender}\r\n                                onValueChange={(value, index) => this.setGender(value)}\r\n                                mode=\"dropdown\" // Android only\r\n                                style={customstyles.dropdowntheme}\r\n                            >\r\n                                <Picker.Item label=\"Select Gender\" value=\"\" color='black' />\r\n                                {\r\n                                    this.state.userGenders ?\r\n                                        this.state.userGenders.map((item, i) => (\r\n                                            <Picker.Item key={i} label={item.description} selectedValue={this.state.gender == item.description ? true : false} value={item.description} color=\"black\" />\r\n                                        ))\r\n                                        : <Picker.Item label='No Data' value='0' />\r\n                                }\r\n                            </Picker>\r\n                        </View>\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Address</Text>\r\n                        <TextInput\r\n                            name=\"address\" placeholder={'Address'}\r\n                            value={this.state.address ? this.state.address : ''}\r\n                            onChangeText={(address) => this.setState({ address })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]}\r\n                        />\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Marital Status</Text>\r\n                        <View style={customstyles.dropdownBoxTheme}>\r\n                            <Picker\r\n                                selectedValue={this.state.marital_status}\r\n                                onValueChange={(value, index) => this.setMarital(value)}\r\n                                mode=\"dropdown\" // Android only\r\n                                style={customstyles.dropdowntheme}\r\n                            >\r\n                                <Picker.Item label=\"Select Marital Status\" value=\"\" color='black' />\r\n                                {\r\n                                    this.state.userMarriageTitle ?\r\n                                        this.state.userMarriageTitle.map((item, i) => (\r\n                                            <Picker.Item key={i} label={item.description} selectedValue={this.state.marital_status == item.description} value={item.description} color=\"black\" />\r\n                                        ))\r\n                                        : <Picker.Item label='No Data' value='0' />\r\n                                }\r\n                            </Picker>\r\n                        </View>\r\n\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Income Year</Text>\r\n\r\n                        <TextInput\r\n                            name=\"income_year\" placeholder={'Income Year'}\r\n                            value={this.state.income_year != '' ? this.state.income_year : ''}\r\n                            onChangeText={(income_year) => this.setState({ income_year })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]}\r\n                        />\r\n\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Yearly Income</Text>\r\n                        <TextInput\r\n                            placeholder={'Yearly Income'}\r\n                            value={this.state.yearly_income ? this.state.yearly_income : ''}\r\n                            onChangeText={(yearly_income) => this.setState({ yearly_income })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]}\r\n                        />\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Industry</Text>\r\n                        <TextInput\r\n                            placeholder={'Industry Income'}\r\n                            value={this.state.industry ? this.state.industry : ''}\r\n                            onChangeText={(industry) => this.setState({ industry })}\r\n                            style={[customstyles.inputtheme, { marginBottom: 10 }]}\r\n                        />\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>School Attended</Text>\r\n                        <View style={customstyles.dropdownBoxTheme}>\r\n                            <Picker\r\n                                selectedValue={this.state.school_attended}\r\n                                onValueChange={(value, index) => this.schoolAttended(value)}\r\n                                mode=\"dropdown\" // Android only\r\n                                style={customstyles.dropdowntheme}\r\n                            >\r\n                                <Picker.Item label=\"School Attended\" value=\"\" color='black' />\r\n                                <Picker.Item label=\"Yes\" value=\"1\" selectedValue={this.state.school_attended == 1 ? true : false} color='black' />\r\n                                <Picker.Item label=\"No\" value=\"0\" selectedValue={this.state.school_attended == 0 ? true : false} color='black' />\r\n\r\n                            </Picker>\r\n                        </View>\r\n\r\n                        <Text style={[customstyles.textpurple, { marginBottom: 3 }]}>Country Of Issue</Text>\r\n                        <View style={customstyles.dropdownBoxTheme}>\r\n                            <Picker\r\n                                selectedValue={this.state.nationality}\r\n                                onValueChange={(value, index) => this.setNationality(value)}\r\n                                mode=\"dropdown\" // Android only\r\n                                style={customstyles.dropdowntheme}\r\n                            >\r\n                                <Picker.Item label=\"Select Nationality\" value=\"\" color='black' />\r\n                                {\r\n                                    this.state.userNationality ?\r\n                                        this.state.userNationality.map((item, i) => (\r\n                                            <Picker.Item key={i} label={item.code} selectedValue={this.state.nationality == item.code ? item.code : ''} value={item.code} color=\"black\" />\r\n                                        ))\r\n                                        : <Picker.Item label='No Data' value='0' />\r\n                                }\r\n                            </Picker>\r\n                        </View>\r\n\r\n                        {\r\n                            this.state.api_resp.length > 0 &&\r\n                            <Text style={{ color: 'green' }}>{this.state.api_resp}</Text>\r\n                        }\r\n\r\n                        <TouchableOpacity onPress={this.validateInput.bind(this)}>\r\n                            <View\r\n                                style={customstyles.btnTheme}\r\n                            >\r\n                                <Text style={customstyles.btnthemeText}>\r\n                                    {this.state.isLoading ? \"Updating...\" : \"Update\"}\r\n                                </Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n\r\n\r\n\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    linearGradient: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n    },\r\n    scrollArea: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        paddingTop: StatusBar.currentHeight,\r\n    },\r\n    innerView: {\r\n        height: \"100%\",\r\n        paddingHorizontal: 20,\r\n\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#ecf0f1',\r\n    },\r\n    button: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n        padding: 10,\r\n        marginBottom: 20,\r\n        borderRadius: 30,\r\n    },\r\n    buttonText: {\r\n        color: \"#663792\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 20\r\n    },\r\n    input: {\r\n        width: 200,\r\n        height: 44,\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        marginBottom: 10,\r\n    },\r\n    appButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 30,\r\n        paddingVertical: 15,\r\n        // paddingHorizontal: 12,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: -2, height: 6 },\r\n        shadowOpacity: 0.4,\r\n        shadowRadius: 7,\r\n    },\r\n    datePickerStyle: {\r\n        width: 200,\r\n        marginTop: 20,\r\n    },\r\n    picker: {\r\n        marginVertical: 30,\r\n        width: 300,\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: \"#fff\",\r\n        color: '#fff'\r\n    },\r\n});\r\n\r\nexport default EditProfile;"]},"metadata":{},"sourceType":"module"}