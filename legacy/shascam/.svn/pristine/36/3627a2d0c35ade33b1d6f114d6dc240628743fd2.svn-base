{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileScreen from \"./ProfileScreen.js\";\nimport Info from \"./Info.js\";\nimport Wallet from \"./Wallet.js\";\nimport Question from \"./Question.js\";\nimport Offer from \"./Offer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar MyTabs = function MyTabs(props) {\n  var new_value = props.route.params;\n  return _jsx(View, {\n    style: styles.screenContainer,\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === \"Info\") {\n              iconName = focused ? 'pencil' : 'pencil-outline';\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? 'account-circle' : 'account-circle-outline';\n            } else if (route.name === \"Wallet\") {\n              iconName = focused ? 'wallet' : 'wallet-outline';\n            } else if (route.name === \"Question\") {\n              iconName = focused ? 'format-list-bulleted-square' : 'format-list-checkbox';\n            } else if (route.name === \"Offer\") {\n              iconName = focused ? 'storefront' : 'storefront-outline';\n            }\n\n            return _jsx(MaterialCommunityIcons, {\n              name: iconName,\n              size: 20,\n              color: \"#fff\",\n              style: {\n                height: 20\n              }\n            });\n          },\n          tabBarStyle: {\n            position: 'absolute',\n            zIndex: 2\n          },\n          tabBarInactiveTintColor: \"#fff\",\n          tabBarActiveTintColor: '#fff',\n          tabBarActiveBackgroundColor: \"rgba(255, 255, 255, .2)\",\n          tabBarBackground: function tabBarBackground() {\n            return _jsx(LinearGradient, {\n              colors: ['#663792', '#3d418b', '#0a4487'],\n              start: {\n                x: 0,\n                y: 1\n              },\n              end: {\n                x: 1,\n                y: 1\n              },\n              style: {\n                height: \"100%\"\n              }\n            });\n          }\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Profile\",\n        options: {\n          headerShown: false\n        },\n        component: ProfileScreen,\n        initialRouteName: ProfileScreen,\n        initialParams: {\n          userInfo: new_value\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Info\",\n        options: {\n          headerShown: false\n        },\n        component: Info\n      }), _jsx(Tab.Screen, {\n        name: \"Wallet\",\n        options: {\n          headerShown: false\n        },\n        component: Wallet\n      }), _jsx(Tab.Screen, {\n        name: \"Question\",\n        options: {\n          headerShown: false\n        },\n        component: Question,\n        initialParams: {\n          user_id: 4\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Offer\",\n        options: {\n          headerShown: false\n        },\n        component: Offer\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1\n  },\n  linearGradient: {\n    height: 55,\n    justifyContent: \"center\",\n    zIndex: 1,\n    position: \"absolute\",\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10\n  }\n});\nexport default MyTabs;","map":{"version":3,"sources":["D:/IdentityWallet/components/MyTabs.js"],"names":["React","LinearGradient","MaterialCommunityIcons","createBottomTabNavigator","ProfileScreen","Info","Wallet","Question","Offer","Tab","MyTabs","props","new_value","route","params","styles","screenContainer","tabBarIcon","focused","color","size","iconName","name","height","tabBarStyle","position","zIndex","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarActiveBackgroundColor","tabBarBackground","x","y","headerShown","userInfo","user_id","StyleSheet","create","flex","linearGradient","justifyContent","borderTopLeftRadius","borderTopRightRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Button, TouchableOpacity, Text, Image, ImageBackground } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport ProfileScreen from \"./ProfileScreen.js\";\r\nimport Info from './Info.js';\r\nimport Wallet from './Wallet.js';\r\nimport Question from './Question.js';\r\nimport Offer from './Offer.js';\r\nconst Tab = createBottomTabNavigator();\r\nconst MyTabs = (props) => {\r\n    let new_value = props.route.params;\r\n    //console.log(new_value);\r\n    return (\r\n        <View style={styles.screenContainer}>\r\n            <Tab.Navigator screenOptions={({ route }) => ({\r\n                tabBarIcon: ({ focused, color, size }) => {\r\n                    let iconName;\r\n\r\n                    if (route.name === \"Info\") {\r\n                        iconName = focused ? 'pencil' : 'pencil-outline'\r\n                    }\r\n                    else if (route.name === \"Profile\") {\r\n                        iconName = focused ? 'account-circle' : 'account-circle-outline'\r\n                    }\r\n                    else if (route.name === \"Wallet\") {\r\n                        iconName = focused ? 'wallet' : 'wallet-outline'\r\n                    }\r\n                    else if (route.name === \"Question\") {\r\n                        iconName = focused ? 'format-list-bulleted-square' : 'format-list-checkbox'\r\n                    }\r\n                    else if (route.name === \"Offer\") {\r\n                        iconName = focused ? 'storefront' : 'storefront-outline'\r\n                    }\r\n                    return <MaterialCommunityIcons name={iconName} size={20} color={\"#fff\"} style={{ height: 20 }} />;\r\n                },\r\n                tabBarStyle: { position: 'absolute', zIndex: 2, },\r\n                tabBarInactiveTintColor: \"#fff\",\r\n                tabBarActiveTintColor: '#fff',\r\n                tabBarActiveBackgroundColor: \"rgba(255, 255, 255, .2)\",\r\n                tabBarBackground: () => (\r\n                    <LinearGradient colors={['#663792', '#3d418b', '#0a4487']} start={{ x: 0, y: 1 }} end={{ x: 1, y: 1 }} style={{ height: \"100%\" }} >\r\n                    </LinearGradient>\r\n                ),\r\n            })\r\n\r\n            }\r\n            // tabBarOptions={{\r\n            //     tabStyle: {\r\n            //         padding: 3,\r\n            //     },\r\n            // }}\r\n            >\r\n                <Tab.Screen name=\"Profile\" options={{ headerShown: false }} component={ProfileScreen} initialRouteName={ProfileScreen} initialParams={{ userInfo: new_value }} />\r\n                <Tab.Screen name=\"Info\" options={{ headerShown: false }} component={Info} />\r\n                <Tab.Screen name=\"Wallet\" options={{ headerShown: false }} component={Wallet} />\r\n                <Tab.Screen name=\"Question\" options={{ headerShown: false }} component={Question} initialParams={{ user_id: 4 }} />\r\n                <Tab.Screen name=\"Offer\" options={{ headerShown: false }} component={Offer} />\r\n            </Tab.Navigator>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    screenContainer: {\r\n        flex: 1,\r\n    },\r\n    linearGradient: {\r\n        height: 55,\r\n        justifyContent: \"center\",\r\n        zIndex: 1,\r\n        position: \"absolute\",\r\n        borderTopLeftRadius: 10,\r\n        borderTopRightRadius: 10,\r\n    }\r\n})\r\nexport default MyTabs;"]},"metadata":{},"sourceType":"module"}