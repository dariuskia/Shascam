import React, { useEffect, useState } from 'react';
import { StyleSheet, View, Button, TouchableOpacity, Text, Image, ImageBackground } from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import ProfileScreen from "./ProfileScreen.js";
import Info from './Info.js';
import Wallet from './Wallet.js';
import Question from './Question.js';
import Offer from './Offer.js';
import ShowDocs from './ShowDocs.js';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { customstyles } from '../customstyle.js';
import { commonPost } from './functions.js';
const Tab = createBottomTabNavigator();
function MyTabs({ navigation, route }) {

    const [userId, setUserId] = useState('');
    const [userData, setUserData] = useState('');

    useEffect(() => {
        const value = AsyncStorage.getItem('userInfo')
            .then((value) => {
                let userData = JSON.parse(value);
                setUserData(userData);
                setUserId(userData.id);
            });
    }, []);

    return (
        <View style={styles.screenContainer}>
            <Tab.Navigator screenOptions={({ route }) => ({
                tabBarIcon: ({ focused, color, size }) => {
                    let iconName;
                    if (route.name === "Info") {
                        iconName = focused ? 'pencil' : 'pencil-outline'
                    }
                    else if (route.name === "Profile") {
                        iconName = focused ? 'account-circle' : 'account-circle-outline'
                    }
                    else if (route.name === "Wallet") {
                        iconName = focused ? 'wallet' : 'wallet-outline'
                    }
                    else if (route.name === "Question") {
                        iconName = focused ? 'format-list-bulleted-square' : 'format-list-checkbox'
                    }
                    else if (route.name === "Offer") {
                        iconName = focused ? 'storefront' : 'storefront-outline'
                    }
                    return <MaterialCommunityIcons name={iconName} size={20} color={"#fff"} style={{ height: 20 }} />;
                },
                tabBarStyle: { position: 'absolute', zIndex: 2, bottom: 0, borderTopLeftRadius: 8, borderTopRightRadius: 8, overflow: "hidden" },
                tabBarLabelStyle: {
                    fontSize: 12,
                    marginBottom: 5
                },
                tabBarInactiveTintColor: "#fff",
                //tabBarInactiveTintColor:{ "#fff"},
                tabBarActiveTintColor: '#fff',
                tabBarActiveBackgroundColor: "rgba(255, 255, 255, .2)",
                tabBarBackground: () => (
                    <LinearGradient colors={['#663792', '#3d418b', '#0a4487']} start={{ x: 0, y: 1 }} end={{ x: 1, y: 1 }} style={{ height: "100%" }} >
                    </LinearGradient>
                ),
            })
            }
            >
                <Tab.Screen name='Profile' options={{ headerShown: false }} component={ProfileScreen} initialRouteName={ProfileScreen} />
                <Tab.Screen
                    name="Info"
                    component={Info}
                    options={({ navigation }) => ({
                        headerShown: false,
                        tabBarButton: (props) => (
                            <TouchableOpacity
                                {...props}
                                onPress={() =>
                                    navigation.navigate('Info', { user_id: userId })
                                }
                            />
                        ),
                    })}
                />
                <Tab.Screen
                    name="Wallet"
                    component={Wallet}
                    options={({ navigation }) => ({
                        headerShown: false,
                        tabBarButton: (props) => (
                            <TouchableOpacity
                                {...props}
                                onPress={() =>
                                    navigation.navigate('Wallet', { user_id: userId })
                                }
                            />
                        ),
                    })}
                />
                <Tab.Screen
                    name="Question"
                    component={Question}
                    options={({ navigation }) => ({
                        headerShown: false,
                        tabBarButton: (props) => (
                            <TouchableOpacity
                                {...props}
                                onPress={() =>
                                    navigation.navigate('Question', { user_id: userId })
                                }
                            />
                        ),
                    })}
                />
                <Tab.Screen
                    name="Offer"
                    component={Offer}
                    options={({ navigation }) => ({
                        headerShown: false,
                        tabBarButton: (props) => (
                            <TouchableOpacity
                                {...props}
                                onPress={() =>
                                    navigation.navigate('Offer', { user_id: userId })
                                }
                            />
                        ),
                    })}
                />
            </Tab.Navigator>

        </View>
    )
}
const styles = StyleSheet.create({
    screenContainer: {
        flex: 1,
    },
    linearGradient: {
        height: 55,
        justifyContent: "center",
        zIndex: 1,
        position: "absolute",
        borderTopLeftRadius: 10,
        borderTopRightRadius: 10,
    }
})
export default MyTabs;