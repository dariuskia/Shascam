{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { forgotPassword } from \"./functions\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      api_resp: ''\n    };\n\n    _this.forgot = function () {\n      var data = {\n        email: _this.state.username\n      };\n      var response = forgotPassword(data);\n      response.then(function (result) {\n        var message = result.message;\n        var status = result.status;\n\n        if (status == 1) {\n          Alert.alert(message);\n        } else {\n          Alert.alert(message);\n        }\n\n        console.log(message);\n        console.log(status);\n      });\n    };\n\n    _this.state = {\n      username: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"validateInput\",\n    value: function validateInput() {\n      var username = this.state.username;\n      var pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n      var isValid = true;\n\n      if (username == '') {\n        this.setState({\n          username_err: 'Email is required'\n        });\n        return;\n        isValid = false;\n      } else {\n        this.setState({\n          username_err: ''\n        });\n      }\n\n      if (pattern.test(username) === false) {\n        this.setState({\n          username_err: 'Email is not valid'\n        });\n        isValid = false;\n      } else {\n        this.setState({\n          username_err: ''\n        });\n      }\n\n      if (isValid) {\n        this.forgot();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          children: this.state.api_resp\n        }), _jsx(Text, {\n          children: this.state.username_err\n        }), _jsx(TextInput, {\n          value: this.state.username,\n          onChangeText: function onChangeText(username) {\n            return _this2.setState({\n              username: username\n            });\n          },\n          placeholder: 'Enter Email',\n          style: styles.input\n        }), _jsx(Button, {\n          title: 'Submit',\n          style: styles.input,\n          onPress: this.validateInput.bind(this)\n        })]\n      });\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["D:/IdentityWallet/components/Forgot.js"],"names":["React","Component","forgotPassword","axios","LoginScreen","props","state","api_resp","forgot","data","email","username","response","then","result","message","status","Alert","alert","console","log","pattern","isValid","setState","username_err","test","styles","container","input","validateInput","bind","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","height","padding","borderWidth","borderColor","marginBottom"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAEA,SAASC,cAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;IACMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AADe,UAQnBC,KARmB,GAQX;AACJC,MAAAA,QAAQ,EAAE;AADN,KARW;;AAAA,UAiDnBC,MAjDmB,GAiDV,YAAM;AACX,UAAIC,IAAI,GAAG;AACPC,QAAAA,KAAK,EAAE,MAAKJ,KAAL,CAAWK;AADX,OAAX;AAIA,UAAIC,QAAQ,GAAGV,cAAc,CAACO,IAAD,CAA7B;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAc,UAAUC,MAAV,EAAkB;AAE5B,YAAIC,OAAO,GAAGD,MAAM,CAACC,OAArB;AACA,YAAIC,MAAM,GAAGF,MAAM,CAACE,MAApB;;AAEA,YAAKA,MAAM,IAAI,CAAf,EAAmB;AACfC,UAAAA,KAAK,CAACC,KAAN,CAAYH,OAAZ;AAEH,SAHD,MAGO;AACHE,UAAAA,KAAK,CAACC,KAAN,CAAYH,OAAZ;AACH;;AACDI,QAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACH,OAbD;AAeH,KAtEkB;;AAGf,UAAKV,KAAL,GAAa;AACTK,MAAAA,QAAQ,EAAE;AADD,KAAb;AAHe;AAMlB;;;;WAOD,yBAAgB;AACZ,UAAQA,QAAR,GAAqB,KAAKL,KAA1B,CAAQK,QAAR;AACA,UAAIU,OAAO,GAAG,6CAAd;AAEA,UAAIC,OAAO,GAAG,IAAd;;AAEA,UAAKX,QAAQ,IAAI,EAAjB,EAAsB;AAClB,aAAKY,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGA;AACAF,QAAAA,OAAO,GAAG,KAAV;AACH,OAND,MAMO;AACH,aAAKC,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;;AAED,UAAIH,OAAO,CAACI,IAAR,CAAad,QAAb,MAA2B,KAA/B,EAAsC;AAClC,aAAKY,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGAF,QAAAA,OAAO,GAAG,KAAV;AACH,OALD,MAKO;AACH,aAAKC,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH;;AAED,UAAIF,OAAJ,EAAa;AACT,aAAKd,MAAL;AACH;AAGJ;;;WAyBD,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEkB,MAAM,CAACC,SAApB;AAAA,mBACI,KAAC,IAAD;AAAA,oBAAO,KAAKrB,KAAL,CAAWC;AAAlB,UADJ,EAGI,KAAC,IAAD;AAAA,oBAAO,KAAKD,KAAL,CAAWkB;AAAlB,UAHJ,EAII,KAAC,SAAD;AACI,UAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWK,QADtB;AAEI,UAAA,YAAY,EAAE,sBAACA,QAAD;AAAA,mBAAc,MAAI,CAACY,QAAL,CAAc;AAAEZ,cAAAA,QAAQ,EAARA;AAAF,aAAd,CAAd;AAAA,WAFlB;AAGI,UAAA,WAAW,EAAE,aAHjB;AAII,UAAA,KAAK,EAAEe,MAAM,CAACE;AAJlB,UAJJ,EAYI,KAAC,MAAD;AACI,UAAA,KAAK,EAAE,QADX;AAEI,UAAA,KAAK,EAAEF,MAAM,CAACE,KAFlB;AAGI,UAAA,OAAO,EAAE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB;AAHb,UAZJ;AAAA,QADJ;AAoBH;;;;EA9FqB7B,S;;AAiG1B,IAAMyB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAO7BR,EAAAA,KAAK,EAAE;AACHS,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,OAAO,EAAE,EAHN;AAIHC,IAAAA,WAAW,EAAE,CAJV;AAKHC,IAAAA,WAAW,EAAE,OALV;AAMHC,IAAAA,YAAY,EAAE;AANX;AAPsB,CAAlB,CAAf;AAiBA,eAAetC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, TextInput, View, StyleSheet, Text } from 'react-native';\r\nimport { forgotPassword } from './functions';\r\nimport axios from 'axios';\r\nclass LoginScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n        };\r\n    }\r\n\r\n    state = {\r\n        api_resp: '',\r\n    }\r\n\r\n\r\n    validateInput() {\r\n        const { username } = this.state;\r\n        let pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\r\n\r\n        let isValid = true;\r\n\r\n        if ((username == '')) {\r\n            this.setState({\r\n                username_err: 'Email is required'\r\n            })\r\n            return;\r\n            isValid = false;\r\n        } else {\r\n            this.setState({\r\n                username_err: ''\r\n            })\r\n        }\r\n\r\n        if (pattern.test(username) === false) {\r\n            this.setState({\r\n                username_err: 'Email is not valid'\r\n            })\r\n            isValid = false;\r\n        } else {\r\n            this.setState({\r\n                username_err: ''\r\n            })\r\n        }\r\n\r\n        if (isValid) {\r\n            this.forgot();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    forgot = () => {\r\n        let data = {\r\n            email: this.state.username,\r\n        }\r\n\r\n        var response = forgotPassword(data)\r\n        response.then(function (result) {\r\n            //console.log(result);\r\n            let message = result.message;\r\n            let status = result.status;\r\n\r\n            if ((status == 1)) {\r\n                Alert.alert(message);\r\n\r\n            } else {\r\n                Alert.alert(message);\r\n            }\r\n            console.log(message);\r\n            console.log(status);\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text>{this.state.api_resp}</Text>\r\n\r\n                <Text>{this.state.username_err}</Text>\r\n                <TextInput\r\n                    value={this.state.username}\r\n                    onChangeText={(username) => this.setState({ username })}\r\n                    placeholder={'Enter Email'}\r\n                    style={styles.input}\r\n                />\r\n\r\n\r\n                <Button\r\n                    title={'Submit'}\r\n                    style={styles.input}\r\n                    onPress={this.validateInput.bind(this)}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#ecf0f1',\r\n    },\r\n    input: {\r\n        width: 200,\r\n        height: 44,\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        marginBottom: 10,\r\n    },\r\n});\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}