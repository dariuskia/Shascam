{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Loader from \"./Loader\";\nimport { getCategories, setUserPreference, getUserPrefrence } from \"./functions.js\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Checkbox from 'expo-checkbox';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Category = function (_Component) {\n  _inherits(Category, _Component);\n\n  var _super = _createSuper(Category);\n\n  function Category() {\n    var _this;\n\n    _classCallCheck(this, Category);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      categories: [],\n      DataisLoaded: false,\n      values: [],\n      api_resp: '',\n      api_resp_color: '',\n      selectedCheckboxes: [],\n      error_vald: '',\n      user_id_ori: '',\n      is_val_checked: false\n    };\n\n    _this.getCategory = function () {\n      var resp = getCategories().then(function (resp) {\n        var result = resp.data.data;\n\n        _this.setState({\n          categories: result,\n          checkboxes: result,\n          DataisLoaded: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.getUserPrefrence = function (user_id) {\n      var resp = getUserPrefrence(user_id).then(function (resp) {\n        var result = resp.data;\n        console.log(result);\n\n        _this.setState({\n          user_pref: result\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.setCategory = function (e) {\n      e.preventDefault();\n      var cat_list = _this.state.selectedCheckboxes;\n\n      if (cat_list == '') {\n        _this.setState({\n          error_vald: \"Please select atleast one category\"\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            error_vald: ''\n          });\n        }, 3000);\n      } else {\n        var categories = _this.state.selectedCheckboxes;\n        var previous_str = categories.concat(_this.state.user_pref);\n        var final_str = previous_str.toString();\n        var data = {\n          user_id: _this.state.user_id_ori,\n          category_id: final_str\n        };\n        console.log(data);\n        var resp = setUserPreference(data).then(function (resp) {\n          var result = resp;\n          var message = result.data.message;\n          var status = result.data.status;\n\n          if (status === 1) {\n            _this.setState({\n              api_resp: message,\n              api_resp_color: 'green'\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                api_resp: ''\n              });\n\n              _this.props.navigation.goBack();\n            }, 3000);\n          } else {\n            _this.setState({\n              api_resp: message,\n              api_resp_color: 'red'\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                api_resp: ''\n              });\n            }, 3000);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    _this.onChange = function (id) {\n      var selectedCheckboxes = _this.state.selectedCheckboxes;\n      var findIdx = selectedCheckboxes.indexOf(id);\n\n      if (findIdx > -1) {\n        selectedCheckboxes.splice(findIdx, 1);\n      } else {\n        selectedCheckboxes.push(id);\n      }\n\n      _this.setState({\n        selectedCheckboxes: selectedCheckboxes\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Category, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userDetails = this.props.route.params.userDetails;\n      var user_id = userDetails.id;\n      this.getCategory();\n      this.getUserPrefrence(user_id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          DataisLoaded = _this$state.DataisLoaded,\n          items = _this$state.items;\n\n      if (!DataisLoaded) {\n        return _jsx(Loader, {});\n      }\n\n      return _jsxs(SafeAreaView, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          children: \"Categories \"\n        }), _jsxs(View, {\n          style: styles.section,\n          children: [_jsx(Checkbox, {\n            value: true,\n            color: \"#4630EB\"\n          }), _jsx(Text, {\n            children: \"Custom colored checkbox\"\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Category;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  section: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 10\n  }\n});\nexport default Category;","map":{"version":3,"sources":["D:/IdentityWallet/components/Category.js"],"names":["React","Component","Loader","getCategories","setUserPreference","getUserPrefrence","AsyncStorage","Checkbox","Category","state","categories","DataisLoaded","values","api_resp","api_resp_color","selectedCheckboxes","error_vald","user_id_ori","is_val_checked","getCategory","resp","then","result","data","setState","checkboxes","catch","error","console","log","user_id","user_pref","setCategory","e","preventDefault","cat_list","setTimeout","previous_str","concat","final_str","toString","category_id","message","status","props","navigation","goBack","onChange","id","findIdx","indexOf","splice","push","userDetails","route","params","items","styles","container","section","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","flexDirection","marginTop","marginBottom"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,aAAT,EAAwBC,iBAAxB,EAA2CC,gBAA3C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,QAAP,MAAqB,eAArB;;;;IAGMC,Q;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,YAAY,EAAE,KAFV;AAGJC,MAAAA,MAAM,EAAE,EAHJ;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,cAAc,EAAE,EALZ;AAMJC,MAAAA,kBAAkB,EAAE,EANhB;AAOJC,MAAAA,UAAU,EAAE,EAPR;AAQJC,MAAAA,WAAW,EAAE,EART;AASJC,MAAAA,cAAc,EAAE;AATZ,K;;UAqBRC,W,GAAc,YAAM;AAChB,UAAIC,IAAI,GAAGjB,aAAa,GACnBkB,IADM,CACD,UAAAD,IAAI,EAAI;AACV,YAAIE,MAAM,GAAGF,IAAI,CAACG,IAAL,CAAUA,IAAvB;;AAEA,cAAKC,QAAL,CAAc;AACVd,UAAAA,UAAU,EAAEY,MADF;AAEVG,UAAAA,UAAU,EAAEH,MAFF;AAGVX,UAAAA,YAAY,EAAE;AAHJ,SAAd;AAKH,OATM,EAUNe,KAVM,CAUA,UAACC,KAAD,EAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAZM,CAAX;AAaH,K;;UAIDtB,gB,GAAmB,UAACyB,OAAD,EAAa;AAC5B,UAAIV,IAAI,GAAGf,gBAAgB,CAACyB,OAAD,CAAhB,CACNT,IADM,CACD,UAAAD,IAAI,EAAI;AACV,YAAIE,MAAM,GAAGF,IAAI,CAACG,IAAlB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AACA,cAAKE,QAAL,CAAc;AACVO,UAAAA,SAAS,EAAET;AADD,SAAd;AAGH,OAPM,EAQNI,KARM,CAQA,UAACC,KAAD,EAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVM,CAAX;AAWH,K;;UAKDK,W,GAAc,UAACC,CAAD,EAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIC,QAAQ,GAAG,MAAK1B,KAAL,CAAWM,kBAA1B;;AACA,UAAIoB,QAAQ,IAAI,EAAhB,EAAoB;AAChB,cAAKX,QAAL,CAAc;AACVR,UAAAA,UAAU,EAAE;AADF,SAAd;;AAGAoB,QAAAA,UAAU,CAAC,YAAM;AACb,gBAAKZ,QAAL,CAAc;AAAER,YAAAA,UAAU,EAAE;AAAd,WAAd;AACH,SAFS,EAEP,IAFO,CAAV;AAGH,OAPD,MAOO;AACH,YAAIN,UAAU,GAAG,MAAKD,KAAL,CAAWM,kBAA5B;AACA,YAAIsB,YAAY,GAAG3B,UAAU,CAAC4B,MAAX,CAAkB,MAAK7B,KAAL,CAAWsB,SAA7B,CAAnB;AACA,YAAIQ,SAAS,GAAGF,YAAY,CAACG,QAAb,EAAhB;AAGA,YAAIjB,IAAI,GAAG;AACPO,UAAAA,OAAO,EAAE,MAAKrB,KAAL,CAAWQ,WADb;AAEPwB,UAAAA,WAAW,EAAEF;AAFN,SAAX;AAKAX,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,YAAIH,IAAI,GAAGhB,iBAAiB,CAACmB,IAAD,CAAjB,CACNF,IADM,CACD,UAAAD,IAAI,EAAI;AACV,cAAIE,MAAM,GAAGF,IAAb;AACA,cAAIsB,OAAO,GAAGpB,MAAM,CAACC,IAAP,CAAYmB,OAA1B;AACA,cAAIC,MAAM,GAAGrB,MAAM,CAACC,IAAP,CAAYoB,MAAzB;;AACA,cAAIA,MAAM,KAAK,CAAf,EAAkB;AACd,kBAAKnB,QAAL,CAAc;AACVX,cAAAA,QAAQ,EAAE6B,OADA;AAEV5B,cAAAA,cAAc,EAAE;AAFN,aAAd;;AAIAsB,YAAAA,UAAU,CAAC,YAAM;AACb,oBAAKZ,QAAL,CAAc;AAAEX,gBAAAA,QAAQ,EAAE;AAAZ,eAAd;;AACA,oBAAK+B,KAAL,CAAWC,UAAX,CAAsBC,MAAtB;AACH,aAHS,EAGP,IAHO,CAAV;AAKH,WAVD,MAWK;AACD,kBAAKtB,QAAL,CAAc;AACVX,cAAAA,QAAQ,EAAE6B,OADA;AAEV5B,cAAAA,cAAc,EAAE;AAFN,aAAd;;AAIAsB,YAAAA,UAAU,CAAC,YAAM;AACb,oBAAKZ,QAAL,CAAc;AAAEX,gBAAAA,QAAQ,EAAE;AAAZ,eAAd;AACH,aAFS,EAEP,IAFO,CAAV;AAGH;AACJ,SAzBM,EA0BNa,KA1BM,CA0BA,UAACC,KAAD,EAAW;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,SA5BM,CAAX;AA6BH;AAMJ,K;;UAIDoB,Q,GAAW,UAAAC,EAAE,EAAI;AACb,UAAMjC,kBAAkB,GAAG,MAAKN,KAAL,CAAWM,kBAAtC;AAEA,UAAMkC,OAAO,GAAGlC,kBAAkB,CAACmC,OAAnB,CAA2BF,EAA3B,CAAhB;;AAGA,UAAIC,OAAO,GAAG,CAAC,CAAf,EAAkB;AACdlC,QAAAA,kBAAkB,CAACoC,MAAnB,CAA0BF,OAA1B,EAAmC,CAAnC;AACH,OAFD,MAEO;AACHlC,QAAAA,kBAAkB,CAACqC,IAAnB,CAAwBJ,EAAxB;AACH;;AACD,YAAKxB,QAAL,CAAc;AACVT,QAAAA,kBAAkB,EAAEA;AADV,OAAd;AAGH,K;;;;;;;WAzHD,6BAAoB;AAChB,UAAIsC,WAAW,GAAG,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBF,WAA1C;AAEA,UAAIvB,OAAO,GAAGuB,WAAW,CAACL,EAA1B;AACA,WAAK7B,WAAL;AACA,WAAKd,gBAAL,CAAsByB,OAAtB;AACH;;;WAqHD,kBAAS;AAEL,wBAAgC,KAAKrB,KAArC;AAAA,UAAQE,YAAR,eAAQA,YAAR;AAAA,UAAsB6C,KAAtB,eAAsBA,KAAtB;;AACA,UAAI,CAAC7C,YAAL,EAAmB;AACf,eAAO,KAAC,MAAD,KAAP;AACH;;AACD,aACI,MAAC,YAAD;AAAc,QAAA,KAAK,EAAE8C,MAAM,CAACC,SAA5B;AAAA,mBACI,KAAC,IAAD;AAAA;AAAA,UADJ,EAEI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA,qBACI,KAAC,QAAD;AAEI,YAAA,KAAK,EAAE,IAFX;AAKI,YAAA,KAAK,EAAC;AALV,YADJ,EAQI,KAAC,IAAD;AAAA;AAAA,YARJ;AAAA,UAFJ;AAAA,QADJ;AAiBH;;;;EAhKkB1D,S;;AAoKvB,IAAMwD,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAO7BN,EAAAA,OAAO,EAAE;AACLO,IAAAA,aAAa,EAAE,KADV;AAELH,IAAAA,UAAU,EAAE,QAFP;AAGLI,IAAAA,SAAS,EAAE,EAHN;AAILC,IAAAA,YAAY,EAAE;AAJT;AAPoB,CAAlB,CAAf;AAcA,eAAe5D,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, TextInput, View, StyleSheet, Text, TouchableOpacity, SafeAreaView } from 'react-native';\r\nimport Loader from './Loader';\r\nimport { getCategories, setUserPreference, getUserPrefrence } from \"./functions.js\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Checkbox from 'expo-checkbox';\r\n\r\n\r\nclass Category extends Component {\r\n\r\n    state = {\r\n        categories: [],\r\n        DataisLoaded: false,\r\n        values: [],\r\n        api_resp: '',\r\n        api_resp_color: '',\r\n        selectedCheckboxes: [],\r\n        error_vald: '',\r\n        user_id_ori: '',\r\n        is_val_checked: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userDetails = this.props.route.params.userDetails;\r\n        //console.log(userDetails);\r\n        let user_id = userDetails.id;\r\n        this.getCategory();\r\n        this.getUserPrefrence(user_id);\r\n    }\r\n\r\n    // Category Listing\r\n    getCategory = () => {\r\n        let resp = getCategories()\r\n            .then(resp => {\r\n                let result = resp.data.data;\r\n                //console.log(result);\r\n                this.setState({\r\n                    categories: result,\r\n                    checkboxes: result,\r\n                    DataisLoaded: true,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    // Close\r\n\r\n    // Get Prefrence\r\n    getUserPrefrence = (user_id) => {\r\n        let resp = getUserPrefrence(user_id)\r\n            .then(resp => {\r\n                let result = resp.data;\r\n                console.log(result);\r\n                this.setState({\r\n                    user_pref: result,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    // Close\r\n\r\n\r\n    // Set Prefrence \r\n    setCategory = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state.selectedCheckboxes);\r\n        let cat_list = this.state.selectedCheckboxes;\r\n        if (cat_list == '') {\r\n            this.setState({\r\n                error_vald: \"Please select atleast one category\",\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({ error_vald: '' });\r\n            }, 3000)\r\n        } else {\r\n            let categories = this.state.selectedCheckboxes;\r\n            let previous_str = categories.concat(this.state.user_pref);\r\n            let final_str = previous_str.toString();\r\n\r\n\r\n            let data = {\r\n                user_id: this.state.user_id_ori,\r\n                category_id: final_str\r\n            }\r\n\r\n            console.log(data);\r\n\r\n            var resp = setUserPreference(data)\r\n                .then(resp => {\r\n                    let result = resp;\r\n                    let message = result.data.message;\r\n                    let status = result.data.status;\r\n                    if (status === 1) {\r\n                        this.setState({\r\n                            api_resp: message,\r\n                            api_resp_color: 'green'\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.setState({ api_resp: '' });\r\n                            this.props.navigation.goBack();\r\n                        }, 3000)\r\n\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            api_resp: message,\r\n                            api_resp_color: 'red'\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.setState({ api_resp: '' });\r\n                        }, 3000)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    // Close\r\n\r\n\r\n    onChange = id => {\r\n        const selectedCheckboxes = this.state.selectedCheckboxes;\r\n        // Find index\r\n        const findIdx = selectedCheckboxes.indexOf(id);\r\n        // Index > -1 means that the item exists and that the checkbox is checked\r\n        // and in that case we want to remove it from the array and uncheck it\r\n        if (findIdx > -1) {\r\n            selectedCheckboxes.splice(findIdx, 1);\r\n        } else {\r\n            selectedCheckboxes.push(id);\r\n        }\r\n        this.setState({\r\n            selectedCheckboxes: selectedCheckboxes\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { DataisLoaded, items } = this.state;\r\n        if (!DataisLoaded) {\r\n            return <Loader />;\r\n        }\r\n        return (\r\n            <SafeAreaView style={styles.container}>\r\n                <Text>Categories </Text>\r\n                <View style={styles.section}>\r\n                    <Checkbox\r\n                        //style={styles.checkbox}\r\n                        value={true}\r\n                        //onValueChange={setChecked}\r\n                        //color={isChecked ? '#4630EB' : undefined}\r\n                        color='#4630EB'\r\n                    />\r\n                    <Text>Custom colored checkbox</Text>\r\n                </View>\r\n\r\n\r\n            </SafeAreaView >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#ecf0f1',\r\n    },\r\n    section: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n        marginBottom: 10\r\n    },\r\n});\r\nexport default Category;"]},"metadata":{},"sourceType":"module"}