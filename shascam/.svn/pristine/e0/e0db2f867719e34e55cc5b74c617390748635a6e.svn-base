{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { customstyles } from \"../customstyle\";\nimport { forgotPassword } from \"./functions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Forgot = function (_Component) {\n  _inherits(Forgot, _Component);\n\n  var _super = _createSuper(Forgot);\n\n  function Forgot() {\n    var _this;\n\n    _classCallCheck(this, Forgot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      api_resp: '',\n      isLoading: false\n    };\n\n    _this.forgot = function () {\n      var data = {\n        email: _this.state.username\n      };\n      var response = forgotPassword(data).then(function (res) {\n        console.log(res);\n        var message = res.message;\n        var status = res.status;\n\n        _this.setState({\n          isLoading: true\n        });\n\n        if (status == 1) {\n          setTimeout(function () {\n            _this.setState({\n              api_resp: message,\n              isLoading: false\n            });\n          }, 2000);\n          setTimeout(function () {\n            _this.setState({\n              api_resp: ''\n            });\n          }, 7000);\n          setTimeout(function () {\n            _this.props.navigation.navigate('LoginScreen');\n          }, 8000);\n        } else {\n          setTimeout(function () {\n            _this.setState({\n              api_resp: message,\n              isLoading: false\n            });\n          }, 2000);\n          setTimeout(function () {\n            _this.setState({\n              api_resp: ''\n            });\n          }, 7000);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Forgot, [{\n    key: \"validateInput\",\n    value: function validateInput() {\n      var username = this.state.username;\n      var pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n      var isValid = true;\n\n      if (username == '') {\n        this.setState({\n          username_err: 'Email is required'\n        });\n        return;\n        isValid = false;\n      } else {\n        this.setState({\n          username_err: ''\n        });\n      }\n\n      if (pattern.test(username) === false) {\n        this.setState({\n          username_err: 'Email is not valid'\n        });\n        isValid = false;\n      } else {\n        this.setState({\n          username_err: ''\n        });\n      }\n\n      if (isValid) {\n        this.forgot();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsx(LinearGradient, {\n        colors: ['#663792', '#3d418b', '#0a4487'],\n        start: {\n          x: 0,\n          y: .5\n        },\n        end: {\n          x: 1,\n          y: 1\n        },\n        style: styles.linearGradient,\n        children: _jsxs(View, {\n          style: customstyles.logincontainer,\n          children: [_jsx(Text, {\n            style: customstyles.headingWhite,\n            children: \"Forgot Password\"\n          }), _jsx(Text, {\n            style: {\n              color: '#fff'\n            },\n            children: this.state.api_resp\n          }), _jsx(TextInput, {\n            value: this.state.username,\n            onChangeText: function onChangeText(username) {\n              return _this2.setState({\n                username: username\n              });\n            },\n            placeholder: 'Enter Email',\n            style: customstyles.input\n          }), _jsx(TouchableOpacity, {\n            onPress: this.validateInput.bind(this),\n            children: _jsxs(View, {\n              children: [this.state.isLoading && _jsx(ActivityIndicator, {\n                size: \"large\",\n                color: \"red\"\n              }), _jsx(Text, {\n                style: customstyles.btnWhite,\n                children: this.state.isLoading ? \"SENDING....\" : \"SUBMIT\"\n              })]\n            })\n          })]\n        })\n      });\n    }\n  }]);\n\n  return Forgot;\n}(Component);\n\nvar styles = StyleSheet.create({\n  screenContainer: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  linearGradient: {\n    flex: 1,\n    height: \"100%\",\n    justifyContent: \"center\",\n    padding: 30\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10\n  },\n  appButtonContainer: {\n    elevation: 8,\n    backgroundColor: \"#fff\",\n    borderRadius: 30,\n    paddingVertical: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: -2,\n      height: 6\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 7\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10,\n    marginBottom: 20\n  },\n  buttonText: {\n    color: \"#663792\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  }\n});\nexport default Forgot;","map":{"version":3,"sources":["D:/IdentityWallet/components/Forgot.js"],"names":["React","Component","LinearGradient","customstyles","forgotPassword","Forgot","state","username","api_resp","isLoading","forgot","data","email","response","then","res","console","log","message","status","setState","setTimeout","props","navigation","navigate","pattern","isValid","username_err","test","x","y","styles","linearGradient","logincontainer","headingWhite","color","input","validateInput","bind","btnWhite","StyleSheet","create","screenContainer","flex","justifyContent","height","padding","container","alignItems","backgroundColor","width","borderWidth","borderColor","marginBottom","appButtonContainer","elevation","borderRadius","paddingVertical","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","button","display","flexDirection","buttonText","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, TextInput, View, StyleSheet, Text, ToastAndroid, ActivityIndicator, TouchableOpacity } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { customstyles } from \"../customstyle\";\r\nimport { forgotPassword } from './functions';\r\n\r\nclass Forgot extends Component {\r\n    state = {\r\n        username: '',\r\n        api_resp: '',\r\n        isLoading: false,\r\n    }\r\n    validateInput() {\r\n        const { username } = this.state;\r\n        let pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\r\n\r\n        let isValid = true;\r\n\r\n        if ((username == '')) {\r\n            this.setState({\r\n                username_err: 'Email is required'\r\n            })\r\n            return;\r\n            isValid = false;\r\n        } else {\r\n            this.setState({\r\n                username_err: ''\r\n            })\r\n        }\r\n\r\n        if (pattern.test(username) === false) {\r\n            this.setState({\r\n                username_err: 'Email is not valid'\r\n            })\r\n            isValid = false;\r\n        } else {\r\n            this.setState({\r\n                username_err: ''\r\n            })\r\n        }\r\n\r\n        if (isValid) {\r\n            this.forgot();\r\n        }\r\n    }\r\n\r\n    forgot = () => {\r\n        let data = {\r\n            email: this.state.username,\r\n        }\r\n\r\n        var response = forgotPassword(data)\r\n            .then(res => {\r\n                console.log(res);\r\n                let message = res.message;\r\n                let status = res.status;\r\n\r\n                this.setState({\r\n                    isLoading: true,\r\n                })\r\n\r\n\r\n                if ((status == 1)) {\r\n                    //Alert.alert(message);\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            api_resp: message,\r\n                            isLoading: false,\r\n                        })\r\n                    }, 2000);\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            api_resp: '',\r\n                        });\r\n                    }, 7000);\r\n                    setTimeout(() => {\r\n                        this.props.navigation.navigate('LoginScreen');\r\n                    }, 8000);\r\n                } else {\r\n                    //Alert.alert(message);\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            api_resp: message,\r\n                            isLoading: false,\r\n                        })\r\n                    }, 2000);\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            api_resp: '',\r\n                        })\r\n                    }, 7000);\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <LinearGradient colors={['#663792', '#3d418b', '#0a4487']} start={{ x: 0, y: .5 }} end={{ x: 1, y: 1 }} style={styles.linearGradient}\r\n            >\r\n                <View style={customstyles.logincontainer}>\r\n                    <Text style={customstyles.headingWhite}>Forgot Password</Text>\r\n                    <Text style={{ color: '#fff' }}>{this.state.api_resp}</Text>\r\n\r\n                    {/* <View>\r\n                        {\r\n                            this.state.username_err ? <Text style={customstyles.alertdanger}>{this.state.username_err}</Text> : ''\r\n                        }\r\n                    </View> */}\r\n\r\n                    <TextInput\r\n                        value={this.state.username}\r\n                        onChangeText={(username) => this.setState({ username })}\r\n                        placeholder={'Enter Email'}\r\n                        style={customstyles.input}\r\n                    />\r\n\r\n                    {/* <Button\r\n                        title={'Submit'}\r\n                        style={styles.input}\r\n                        onPress={this.validateInput.bind(this)}\r\n                    /> */}\r\n\r\n                    <TouchableOpacity onPress={this.validateInput.bind(this)}>\r\n                        <View>\r\n                            {this.state.isLoading && <ActivityIndicator size=\"large\" color=\"red\" />}\r\n                            <Text style={customstyles.btnWhite}>\r\n                                {this.state.isLoading ? \"SENDING....\" : \"SUBMIT\"}\r\n                            </Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </LinearGradient>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    screenContainer: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n    },\r\n    linearGradient: {\r\n        flex: 1,\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        padding: 30,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#ecf0f1',\r\n    },\r\n    input: {\r\n        width: 200,\r\n        height: 44,\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        marginBottom: 10,\r\n    },\r\n    appButtonContainer: {\r\n        elevation: 8,\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 30,\r\n        paddingVertical: 15,\r\n        // paddingHorizontal: 12,\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: -2, height: 6 },\r\n        shadowOpacity: 0.4,\r\n        shadowRadius: 7,\r\n    },\r\n    button: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#DDDDDD\",\r\n        padding: 10,\r\n        marginBottom: 20,\r\n    },\r\n    buttonText: {\r\n        color: \"#663792\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 20\r\n    },\r\n});\r\n\r\nexport default Forgot;"]},"metadata":{},"sourceType":"module"}