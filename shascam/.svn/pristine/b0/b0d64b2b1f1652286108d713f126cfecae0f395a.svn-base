{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { forgotPassword } from \"./functions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.forgot = function () {\n      var data = {\n        email: _this.state.username\n      };\n      var response = forgotPassword(data).then(function (result) {\n        console.log(result);\n        var message = result.message;\n        var status = result.status;\n\n        if (status === 2) {\n          this.setState({\n            api_resp: message\n          });\n        } else {\n          this.setState({\n            api_resp: ''\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      username: '',\n      api_resp: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"validateInput\",\n    value: function validateInput() {\n      var username = this.state.username;\n      var pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n      var isValid = true;\n\n      if (username == '') {\n        this.setState({\n          username_err: 'Email is required'\n        });\n        return;\n        isValid = false;\n      } else {\n        this.setState({\n          username_err: ''\n        });\n      }\n\n      if (pattern.test(username) === false) {\n        this.setState({\n          username_err: 'Email is not valid'\n        });\n        isValid = false;\n      } else {\n        this.setState({\n          username_err: ''\n        });\n      }\n\n      if (isValid) {\n        this.forgot();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          children: this.state.api_resp\n        }), _jsx(Text, {\n          children: this.state.username_err\n        }), _jsx(TextInput, {\n          value: this.state.username,\n          onChangeText: function onChangeText(username) {\n            return _this2.setState({\n              username: username\n            });\n          },\n          placeholder: 'Enter Email',\n          style: styles.input\n        }), _jsx(Button, {\n          title: 'Submit',\n          style: styles.input,\n          onPress: this.validateInput.bind(this)\n        })]\n      });\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  input: {\n    width: 200,\n    height: 44,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 10\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["D:/IdentityWallet/components/Forgot.js"],"names":["React","Component","forgotPassword","LoginScreen","props","forgot","data","email","state","username","response","then","result","console","log","message","status","setState","api_resp","pattern","isValid","username_err","test","styles","container","input","validateInput","bind","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","height","padding","borderWidth","borderColor","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, TextInput, View, StyleSheet, Text } from 'react-native';\r\nimport { forgotPassword } from './functions';\r\nclass LoginScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            api_resp: '',\r\n        };\r\n    }\r\n\r\n\r\n    validateInput() {\r\n        const { username } = this.state;\r\n        let pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\r\n\r\n        let isValid = true;\r\n\r\n        if ((username == '')) {\r\n            this.setState({\r\n                username_err: 'Email is required'\r\n            })\r\n            return;\r\n            isValid = false;\r\n        } else {\r\n            this.setState({\r\n                username_err: ''\r\n            })\r\n        }\r\n\r\n        if (pattern.test(username) === false) {\r\n            this.setState({\r\n                username_err: 'Email is not valid'\r\n            })\r\n            isValid = false;\r\n        } else {\r\n            this.setState({\r\n                username_err: ''\r\n            })\r\n        }\r\n\r\n        if (isValid) {\r\n            this.forgot();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    forgot = () => {\r\n        let data = {\r\n            email: this.state.username,\r\n        }\r\n\r\n        var response = forgotPassword(data)\r\n            .then(function (result) {\r\n                console.log(result);\r\n                let message = result.message;\r\n                let status = result.status;\r\n                //console.log(message);\r\n                //console.log(status);\r\n                if ((status === 2)) {\r\n                    this.setState({\r\n                        api_resp: message\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        api_resp: ''\r\n                    });\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text>{this.state.api_resp}</Text>\r\n\r\n                <Text>{this.state.username_err}</Text>\r\n                <TextInput\r\n                    value={this.state.username}\r\n                    onChangeText={(username) => this.setState({ username })}\r\n                    placeholder={'Enter Email'}\r\n                    style={styles.input}\r\n                />\r\n\r\n\r\n                <Button\r\n                    title={'Submit'}\r\n                    style={styles.input}\r\n                    onPress={this.validateInput.bind(this)}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#ecf0f1',\r\n    },\r\n    input: {\r\n        width: 200,\r\n        height: 44,\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        marginBottom: 10,\r\n    },\r\n});\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}