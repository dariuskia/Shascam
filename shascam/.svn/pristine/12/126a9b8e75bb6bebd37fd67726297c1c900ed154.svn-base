{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar url = \"http://dev.identity-wallet.com/api/\";\n\nfunction loginAPI(data) {\n  var response;\n  return _regeneratorRuntime.async(function loginAPI$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'HEAD, GET, POST, PUT, DELETE'\n            },\n            body: JSON.stringify(data),\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.json());\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\n\nfunction postData(data) {\n  var response;\n  return _regeneratorRuntime.async(function postData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json',\n              'Access-Control-Allow-Origin': '*',\n              'Access-Control-Allow-Methods': 'HEAD, GET, POST, PUT, DELETE'\n            },\n            body: JSON.stringify(data),\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", response.json());\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\n\nfunction registerAPI(data) {\n  var response;\n  return _regeneratorRuntime.async(function registerAPI$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(data);\n          _context3.prev = 1;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url + 'registration', {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            redirect: \"manual\"\n          }));\n\n        case 4:\n          response = _context3.sent;\n          return _context3.abrupt(\"return\", response.json());\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.log(_context3.t0);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n}\n\nfunction postDataOther(url, data) {\n  var response;\n  return _regeneratorRuntime.async(function postDataOther$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context4.sent;\n          return _context4.abrupt(\"return\", response.json());\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\n\nfunction getData(url) {\n  var response;\n  return _regeneratorRuntime.async(function getData$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: 'manual'\n          }));\n\n        case 2:\n          response = _context5.sent;\n          return _context5.abrupt(\"return\", response.json());\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction putData() {\n  var data,\n      response,\n      _args6 = arguments;\n  return _regeneratorRuntime.async(function putData$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          data = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: 'PUT',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: JSON.stringify(data)\n          }));\n\n        case 3:\n          response = _context6.sent;\n          return _context6.abrupt(\"return\", response.json());\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction delData() {\n  var data,\n      response,\n      _args7 = arguments;\n  return _regeneratorRuntime.async(function delData$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          data = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: 'DELETE',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            redirect: 'manual',\n            referrerPolicy: 'no-referrer',\n            body: JSON.stringify(data)\n          }));\n\n        case 3:\n          response = _context7.sent;\n          return _context7.abrupt(\"return\", response.json());\n\n        case 5:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction concatenate_objects(object_first, object_second) {\n  var object_new = {};\n\n  for (var key in object_first) {\n    object_new[key] = object_first[key];\n  }\n\n  for (var key in object_second) {\n    object_new[key] = object_second[key];\n  }\n\n  return object_new;\n}\n\nvar NewregisterAPI = function NewregisterAPI(data) {\n  var response;\n  return _regeneratorRuntime.async(function NewregisterAPI$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'registration', {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 3:\n          response = _context8.sent;\n          return _context8.abrupt(\"return\", response.json());\n\n        case 7:\n          _context8.prev = 7;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.log(_context8.t0);\n\n        case 10:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar userDetailById = function userDetailById(user_id) {\n  var response;\n  return _regeneratorRuntime.async(function userDetailById$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + (\"userDetailById?id=\" + user_id), {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context9.sent;\n          return _context9.abrupt(\"return\", response.json());\n\n        case 7:\n          _context9.prev = 7;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.log(_context9.t0);\n\n        case 10:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar updateProfile = function updateProfile(data) {\n  var resp;\n  return _regeneratorRuntime.async(function updateProfile$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'update_profile', data));\n\n        case 3:\n          resp = _context10.sent;\n          return _context10.abrupt(\"return\", resp);\n\n        case 7:\n          _context10.prev = 7;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.log(_context10.t0);\n\n        case 10:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getFolderName = function getFolderName(data) {\n  var resp;\n  return _regeneratorRuntime.async(function getFolderName$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'getFolderName', data));\n\n        case 3:\n          resp = _context11.sent;\n          return _context11.abrupt(\"return\", resp);\n\n        case 7:\n          _context11.prev = 7;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.log(_context11.t0);\n\n        case 10:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getCommonFolder = function getCommonFolder(data) {\n  var resp;\n  return _regeneratorRuntime.async(function getCommonFolder$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'getCommonFolder', data));\n\n        case 3:\n          resp = _context12.sent;\n          return _context12.abrupt(\"return\", resp);\n\n        case 7:\n          _context12.prev = 7;\n          _context12.t0 = _context12[\"catch\"](0);\n          console.log(_context12.t0);\n\n        case 10:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar createFolder = function createFolder(data) {\n  var resp;\n  return _regeneratorRuntime.async(function createFolder$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'insertFolder', data));\n\n        case 3:\n          resp = _context13.sent;\n          return _context13.abrupt(\"return\", resp);\n\n        case 7:\n          _context13.prev = 7;\n          _context13.t0 = _context13[\"catch\"](0);\n          console.log(_context13.t0);\n\n        case 10:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getCategories = function getCategories() {\n  var resp;\n  return _regeneratorRuntime.async(function getCategories$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.prev = 0;\n          _context14.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(url + 'getActiveCategories'));\n\n        case 3:\n          resp = _context14.sent;\n          return _context14.abrupt(\"return\", resp);\n\n        case 7:\n          _context14.prev = 7;\n          _context14.t0 = _context14[\"catch\"](0);\n          console.log(_context14.t0);\n\n        case 10:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar deleteUserFolder = function deleteUserFolder(data) {\n  var resp;\n  return _regeneratorRuntime.async(function deleteUserFolder$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'deleteFolder', data));\n\n        case 3:\n          resp = _context15.sent;\n          return _context15.abrupt(\"return\", resp);\n\n        case 7:\n          _context15.prev = 7;\n          _context15.t0 = _context15[\"catch\"](0);\n          console.log(_context15.t0);\n\n        case 10:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar setUserPreference = function setUserPreference(data) {\n  var resp;\n  return _regeneratorRuntime.async(function setUserPreference$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.prev = 0;\n          _context16.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'setUserPreference', data));\n\n        case 3:\n          resp = _context16.sent;\n          return _context16.abrupt(\"return\", resp);\n\n        case 7:\n          _context16.prev = 7;\n          _context16.t0 = _context16[\"catch\"](0);\n          console.log(_context16.t0);\n\n        case 10:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getCountryList = function getCountryList() {\n  var response;\n  return _regeneratorRuntime.async(function getCountryList$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'countryList', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context17.sent;\n          return _context17.abrupt(\"return\", response.json());\n\n        case 7:\n          _context17.prev = 7;\n          _context17.t0 = _context17[\"catch\"](0);\n          console.log(_context17.t0);\n\n        case 10:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar forgotPassword = function forgotPassword(data) {\n  var response;\n  return _regeneratorRuntime.async(function forgotPassword$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.prev = 0;\n          _context18.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'forgotPassword', {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          }));\n\n        case 3:\n          response = _context18.sent;\n          return _context18.abrupt(\"return\", response.json());\n\n        case 7:\n          _context18.prev = 7;\n          _context18.t0 = _context18[\"catch\"](0);\n          console.log(_context18.t0);\n\n        case 10:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getDocuments = function getDocuments(data) {\n  var resp;\n  return _regeneratorRuntime.async(function getDocuments$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.prev = 0;\n          _context19.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'getFileList', data));\n\n        case 3:\n          resp = _context19.sent;\n          return _context19.abrupt(\"return\", resp);\n\n        case 7:\n          _context19.prev = 7;\n          _context19.t0 = _context19[\"catch\"](0);\n          console.log(_context19.t0);\n\n        case 10:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar uploadDocument = function uploadDocument(data) {\n  var resp;\n  return _regeneratorRuntime.async(function uploadDocument$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.prev = 0;\n          _context20.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'uploadDoc', data));\n\n        case 3:\n          resp = _context20.sent;\n          return _context20.abrupt(\"return\", resp);\n\n        case 7:\n          _context20.prev = 7;\n          _context20.t0 = _context20[\"catch\"](0);\n          console.log(_context20.t0);\n\n        case 10:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar deleteFile = function deleteFile(data) {\n  var resp;\n  return _regeneratorRuntime.async(function deleteFile$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.prev = 0;\n          _context21.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'deleteFile', data));\n\n        case 3:\n          resp = _context21.sent;\n          return _context21.abrupt(\"return\", resp);\n\n        case 7:\n          _context21.prev = 7;\n          _context21.t0 = _context21[\"catch\"](0);\n          console.log(_context21.t0);\n\n        case 10:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getUserPrefrence = function getUserPrefrence(user_id) {\n  var response;\n  return _regeneratorRuntime.async(function getUserPrefrence$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.prev = 0;\n          _context22.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + (\"get-user-preference?user_id=\" + user_id), {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context22.sent;\n          return _context22.abrupt(\"return\", response.json());\n\n        case 7:\n          _context22.prev = 7;\n          _context22.t0 = _context22[\"catch\"](0);\n          console.log(_context22.t0);\n\n        case 10:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getSelectedPref = function getSelectedPref(user_id) {\n  var response;\n  return _regeneratorRuntime.async(function getSelectedPref$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.prev = 0;\n          _context23.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + (\"getSelectedPref?user_id=\" + user_id), {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context23.sent;\n          return _context23.abrupt(\"return\", response.json());\n\n        case 7:\n          _context23.prev = 7;\n          _context23.t0 = _context23[\"catch\"](0);\n          console.log(_context23.t0);\n\n        case 10:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getQuestionListing = function getQuestionListing() {\n  var response;\n  return _regeneratorRuntime.async(function getQuestionListing$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.prev = 0;\n          _context24.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'getQuestionListing', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context24.sent;\n          return _context24.abrupt(\"return\", response.json());\n\n        case 7:\n          _context24.prev = 7;\n          _context24.t0 = _context24[\"catch\"](0);\n          console.log(_context24.t0);\n\n        case 10:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getRandomQuestion = function getRandomQuestion(user_id) {\n  var response;\n  return _regeneratorRuntime.async(function getRandomQuestion$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _context25.prev = 0;\n          _context25.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + (\"getRandomQuestion?user_id=\" + user_id), {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context25.sent;\n          return _context25.abrupt(\"return\", response.json());\n\n        case 7:\n          _context25.prev = 7;\n          _context25.t0 = _context25[\"catch\"](0);\n          console.log(_context25.t0);\n\n        case 10:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getUserAnswer = function getUserAnswer(data) {\n  var resp;\n  return _regeneratorRuntime.async(function getUserAnswer$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          _context26.prev = 0;\n          _context26.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'getUserAnswer', data));\n\n        case 3:\n          resp = _context26.sent;\n          return _context26.abrupt(\"return\", resp);\n\n        case 7:\n          _context26.prev = 7;\n          _context26.t0 = _context26[\"catch\"](0);\n          console.log(_context26.t0);\n\n        case 10:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar userOffer = function userOffer() {\n  var response;\n  return _regeneratorRuntime.async(function userOffer$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          _context27.prev = 0;\n          _context27.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'userOffer', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context27.sent;\n          return _context27.abrupt(\"return\", response.json());\n\n        case 7:\n          _context27.prev = 7;\n          _context27.t0 = _context27[\"catch\"](0);\n          console.log(_context27.t0);\n\n        case 10:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar companyFilter = function companyFilter(currentCompany) {\n  var response;\n  return _regeneratorRuntime.async(function companyFilter$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          _context28.prev = 0;\n          _context28.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + (\"userOffer?company_id=\" + currentCompany), {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context28.sent;\n          return _context28.abrupt(\"return\", response.json());\n\n        case 7:\n          _context28.prev = 7;\n          _context28.t0 = _context28[\"catch\"](0);\n          console.log(_context28.t0);\n\n        case 10:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar priceFilter = function priceFilter(data) {\n  var response;\n  return _regeneratorRuntime.async(function priceFilter$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          _context29.prev = 0;\n          _context29.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + (\"userOffer?min_price=\" + data.min_price + \"&max_price=\" + data.max_price), {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context29.sent;\n          return _context29.abrupt(\"return\", response.json());\n\n        case 7:\n          _context29.prev = 7;\n          _context29.t0 = _context29[\"catch\"](0);\n          console.log(_context29.t0);\n\n        case 10:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar offerDetails = function offerDetails(offer_id) {\n  var response;\n  return _regeneratorRuntime.async(function offerDetails$(_context30) {\n    while (1) {\n      switch (_context30.prev = _context30.next) {\n        case 0:\n          _context30.prev = 0;\n          _context30.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + (\"offerDetails?id=\" + offer_id), {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context30.sent;\n          return _context30.abrupt(\"return\", response.json());\n\n        case 7:\n          _context30.prev = 7;\n          _context30.t0 = _context30[\"catch\"](0);\n          console.log(_context30.t0);\n\n        case 10:\n        case \"end\":\n          return _context30.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar submitOffer = function submitOffer(data) {\n  var resp;\n  return _regeneratorRuntime.async(function submitOffer$(_context31) {\n    while (1) {\n      switch (_context31.prev = _context31.next) {\n        case 0:\n          _context31.prev = 0;\n          _context31.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(url + 'saveUserOffer', data));\n\n        case 3:\n          resp = _context31.sent;\n          return _context31.abrupt(\"return\", resp);\n\n        case 7:\n          _context31.prev = 7;\n          _context31.t0 = _context31[\"catch\"](0);\n          console.log(_context31.t0);\n\n        case 10:\n        case \"end\":\n          return _context31.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar companyList = function companyList() {\n  var response;\n  return _regeneratorRuntime.async(function companyList$(_context32) {\n    while (1) {\n      switch (_context32.prev = _context32.next) {\n        case 0:\n          _context32.prev = 0;\n          _context32.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'companylist', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context32.sent;\n          return _context32.abrupt(\"return\", response.json());\n\n        case 7:\n          _context32.prev = 7;\n          _context32.t0 = _context32[\"catch\"](0);\n          console.log(_context32.t0);\n\n        case 10:\n        case \"end\":\n          return _context32.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getGeneralOffer = function getGeneralOffer() {\n  var response;\n  return _regeneratorRuntime.async(function getGeneralOffer$(_context33) {\n    while (1) {\n      switch (_context33.prev = _context33.next) {\n        case 0:\n          _context33.prev = 0;\n          _context33.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'getGeneralOffer', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context33.sent;\n          return _context33.abrupt(\"return\", response.json());\n\n        case 7:\n          _context33.prev = 7;\n          _context33.t0 = _context33[\"catch\"](0);\n          console.log(_context33.t0);\n\n        case 10:\n        case \"end\":\n          return _context33.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getTitles = function getTitles() {\n  var response;\n  return _regeneratorRuntime.async(function getTitles$(_context34) {\n    while (1) {\n      switch (_context34.prev = _context34.next) {\n        case 0:\n          _context34.prev = 0;\n          _context34.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'mmTitles', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context34.sent;\n          return _context34.abrupt(\"return\", response.json());\n\n        case 7:\n          _context34.prev = 7;\n          _context34.t0 = _context34[\"catch\"](0);\n          console.log(_context34.t0);\n\n        case 10:\n        case \"end\":\n          return _context34.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getIdTypes = function getIdTypes() {\n  var response;\n  return _regeneratorRuntime.async(function getIdTypes$(_context35) {\n    while (1) {\n      switch (_context35.prev = _context35.next) {\n        case 0:\n          _context35.prev = 0;\n          _context35.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'mmIdTypes', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context35.sent;\n          return _context35.abrupt(\"return\", response.json());\n\n        case 7:\n          _context35.prev = 7;\n          _context35.t0 = _context35[\"catch\"](0);\n          console.log(_context35.t0);\n\n        case 10:\n        case \"end\":\n          return _context35.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getMobileCountry = function getMobileCountry() {\n  var response;\n  return _regeneratorRuntime.async(function getMobileCountry$(_context36) {\n    while (1) {\n      switch (_context36.prev = _context36.next) {\n        case 0:\n          _context36.prev = 0;\n          _context36.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'mmMobileCountryCodes', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context36.sent;\n          return _context36.abrupt(\"return\", response.json());\n\n        case 7:\n          _context36.prev = 7;\n          _context36.t0 = _context36[\"catch\"](0);\n          console.log(_context36.t0);\n\n        case 10:\n        case \"end\":\n          return _context36.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getNationalities = function getNationalities() {\n  var response;\n  return _regeneratorRuntime.async(function getNationalities$(_context37) {\n    while (1) {\n      switch (_context37.prev = _context37.next) {\n        case 0:\n          _context37.prev = 0;\n          _context37.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + 'mmNationalities', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            redirect: \"manual\"\n          }));\n\n        case 3:\n          response = _context37.sent;\n          return _context37.abrupt(\"return\", response.json());\n\n        case 7:\n          _context37.prev = 7;\n          _context37.t0 = _context37[\"catch\"](0);\n          console.log(_context37.t0);\n\n        case 10:\n        case \"end\":\n          return _context37.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nexport { loginAPI, registerAPI, postData, getData, putData, delData, concatenate_objects, postDataOther, NewregisterAPI, userDetailById, updateProfile, getFolderName, createFolder, getCommonFolder, getCategories, deleteUserFolder, setUserPreference, getCountryList, forgotPassword, getDocuments, uploadDocument, deleteFile, getUserPrefrence, getSelectedPref, getQuestionListing, getRandomQuestion, getUserAnswer, userOffer, offerDetails, submitOffer, companyList, companyFilter, priceFilter, getGeneralOffer };","map":{"version":3,"sources":["D:/IdentityWallet/components/functions.js"],"names":["url","loginAPI","data","fetch","method","headers","body","JSON","stringify","redirect","response","json","console","log","postData","mode","registerAPI","postDataOther","getData","putData","cache","credentials","referrerPolicy","delData","concatenate_objects","object_first","object_second","object_new","key","NewregisterAPI","userDetailById","user_id","updateProfile","axios","post","resp","getFolderName","getCommonFolder","createFolder","getCategories","get","deleteUserFolder","setUserPreference","getCountryList","forgotPassword","getDocuments","uploadDocument","deleteFile","getUserPrefrence","getSelectedPref","getQuestionListing","getRandomQuestion","getUserAnswer","userOffer","companyFilter","currentCompany","priceFilter","min_price","max_price","offerDetails","offer_id","submitOffer","companyList","getGeneralOffer","getTitles","getIdTypes","getMobileCountry","getNationalities"],"mappings":"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","sourcesContent":["//const url = \"http://127.0.0.1:8000/api/\"; \r\nconst url = \"http://dev.identity-wallet.com/api/\";\r\n//const url = \"https://devpdm.nityo.com/\";\r\n//const url = \"https://devsingbulls.nityo.com/api/customer/\"\r\n\r\n// Login API::\r\nasync function loginAPI(data) {\r\n  try {\r\n    const response = await fetch(url + 'login', {\r\n      method: 'POST',\r\n      //mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'HEAD, GET, POST, PUT, DELETE'\r\n      },\r\n      body: JSON.stringify(data),\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json();\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n\r\nasync function postData(data) {\r\n  //const url = \"http://localhost:8000/api/login/\"\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'HEAD, GET, POST, PUT, DELETE'\r\n      },\r\n      body: JSON.stringify(data),\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n// Reg API ::\r\nasync function registerAPI(data) {\r\n  console.log(data);\r\n  try {\r\n    const response = await fetch(url + 'registration', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\nasync function postDataOther(url, data) {\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\nasync function getData(url) {\r\n  const response = await fetch(url, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    redirect: 'manual',\r\n  })\r\n  return response.json()\r\n}\r\nasync function putData(data = {}) {\r\n  // const url = \"http://localhost:8000/api/registration\"\r\n  const response = await fetch(url, {\r\n    method: 'PUT',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(data)\r\n  })\r\n  return response.json()\r\n}\r\nasync function delData(data = {}) {\r\n  // const url = \"http://localhost:8000/api/registration\"\r\n  const response = await fetch(url, {\r\n    method: 'DELETE',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    redirect: 'manual',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(data)\r\n  })\r\n  return response.json()\r\n}\r\nfunction concatenate_objects(object_first, object_second) {\r\n  var object_new = {}\r\n  for (var key in object_first) {\r\n    object_new[key] = object_first[key]\r\n  }\r\n  for (var key in object_second) {\r\n    object_new[key] = object_second[key]\r\n  }\r\n  return object_new\r\n}\r\n\r\n\r\n// Reg New API ::\r\nlet NewregisterAPI = async (data) => {\r\n  // try {\r\n  //   const resp = await axios.post(url + 'registration', data)\r\n  //   return resp;\r\n  // }\r\n  // catch (e) {\r\n  //   console.log(e);\r\n  // }\r\n  try {\r\n    const response = await fetch(url + 'registration', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json();\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Get user detail by id\r\nlet userDetailById = async (user_id) => {\r\n  try {\r\n    const response = await fetch(url + `userDetailById?id=${user_id}`, {\r\n      method: 'GET',\r\n      //mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// updated Profile\r\nlet updateProfile = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'update_profile', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Get User Folder's\r\nlet getFolderName = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'getFolderName', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Get general Folder\r\nlet getCommonFolder = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'getCommonFolder', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Folder create\r\nlet createFolder = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'insertFolder', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Get All Categories ::\r\nlet getCategories = async () => {\r\n  try {\r\n    const resp = await axios.get(url + 'getActiveCategories')\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Delete User Specific Folder\r\nlet deleteUserFolder = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'deleteFolder', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// set User Prefrence\r\nlet setUserPreference = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'setUserPreference', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Country List\r\nlet getCountryList = async () => {\r\n  try {\r\n    const response = await fetch(url + 'countryList', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Forgot Password\r\nlet forgotPassword = async (data) => {\r\n  try {\r\n    const response = await fetch(url + 'forgotPassword', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      cache: 'no-cache',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json();\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Get Documents\r\nlet getDocuments = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'getFileList', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Image upload \r\nlet uploadDocument = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'uploadDoc', data)\r\n    return resp;\r\n    // const resp = axios.post(url+'uploadDoc', data, {\r\n    //   headers: {\r\n    //     'Authorization': `Beaer ${token}`\r\n    //   },\r\n    // });\r\n    // return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Document delete \r\nlet deleteFile = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'deleteFile', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Show User Prefrence\r\nlet getUserPrefrence = async (user_id) => {\r\n  try {\r\n    const response = await fetch(url + `get-user-preference?user_id=${user_id}`, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Show Selected Category \r\nlet getSelectedPref = async (user_id) => {\r\n  try {\r\n    const response = await fetch(url + `getSelectedPref?user_id=${user_id}`, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Question Bank Listing\r\nlet getQuestionListing = async () => {\r\n  try {\r\n    const response = await fetch(url + 'getQuestionListing', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Get Random Question\r\n// let getRandomQuestion  = async (user_id)=>{\r\n//   try {\r\n//     const response = await fetch(url + `getRandomQuestion?user_id=${user_id}`, {\r\n//       method: 'GET',\r\n//       mode: 'cors',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       redirect: \"manual\"\r\n//     })\r\n//     return response.json()\r\n//   }\r\n//   catch (e) {\r\n//     console.log(e);\r\n//   }\r\n// } \r\n\r\nlet getRandomQuestion = async (user_id) => {\r\n  try {\r\n    const response = await fetch(url + `getRandomQuestion?user_id=${user_id}`, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Submit Ans\r\nlet getUserAnswer = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'getUserAnswer', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Offer Listing\r\nlet userOffer = async () => {\r\n  try {\r\n    const response = await fetch(url + 'userOffer', {\r\n      method: 'GET',\r\n      //mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Company Filter Listing\r\nlet companyFilter = async (currentCompany) => {\r\n  try {\r\n    const response = await fetch(url + `userOffer?company_id=${currentCompany}`, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Price Range Filter \r\nlet priceFilter = async (data) => {\r\n  try {\r\n    const response = await fetch(url + `userOffer?min_price=${data.min_price}&max_price=${data.max_price}`, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Offer Detail \r\nlet offerDetails = async (offer_id) => {\r\n  try {\r\n    const response = await fetch(url + `offerDetails?id=${offer_id}`, {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Submit Offer\r\nlet submitOffer = async (data) => {\r\n  try {\r\n    const resp = await axios.post(url + 'saveUserOffer', data)\r\n    return resp;\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Company Listing API\r\nlet companyList = async () => {\r\n  try {\r\n    const response = await fetch(url + 'companylist', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\n// Dashboard Slider Listing\r\nlet getGeneralOffer = async () => {\r\n  try {\r\n    const response = await fetch(url + 'getGeneralOffer', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// title Listing API \r\nlet getTitles = async () => {\r\n  try {\r\n    const response = await fetch(url + 'mmTitles', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// title Listing API \r\nlet getIdTypes = async () => {\r\n  try {\r\n    const response = await fetch(url + 'mmIdTypes', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Mobile Country Listing API \r\nlet getMobileCountry = async () => {\r\n  try {\r\n    const response = await fetch(url + 'mmMobileCountryCodes', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n// Mobile Country Listing API \r\nlet getNationalities = async () => {\r\n  try {\r\n    const response = await fetch(url + 'mmNationalities', {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      redirect: \"manual\"\r\n    })\r\n    return response.json()\r\n  }\r\n  catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n// Close\r\n\r\n\r\nexport { loginAPI, registerAPI, postData, getData, putData, delData, concatenate_objects, postDataOther, NewregisterAPI, userDetailById, updateProfile, getFolderName, createFolder, getCommonFolder, getCategories, deleteUserFolder, setUserPreference, getCountryList, forgotPassword, getDocuments, uploadDocument, deleteFile, getUserPrefrence, getSelectedPref, getQuestionListing, getRandomQuestion, getUserAnswer, userOffer, offerDetails, submitOffer, companyList, companyFilter, priceFilter, getGeneralOffer };"]},"metadata":{},"sourceType":"module"}