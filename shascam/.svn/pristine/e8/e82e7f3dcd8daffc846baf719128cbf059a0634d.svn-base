{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Loader from \"./Loader\";\nimport { customstyles } from \"../customstyle\";\nimport { getCategories, setUserPreference, getUserPrefrence } from \"./functions.js\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Checkbox from 'expo-checkbox';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Category = function (_Component) {\n  _inherits(Category, _Component);\n\n  var _super = _createSuper(Category);\n\n  function Category() {\n    var _this;\n\n    _classCallCheck(this, Category);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      categories: [],\n      DataisLoaded: false,\n      values: [],\n      api_resp: '',\n      response_color: '',\n      selectedCheckboxes: [],\n      error_vald: '',\n      user_id_ori: '',\n      is_val_checked: false,\n      isLoading: false,\n      user_pref: []\n    };\n\n    _this.getUserPrefrence = function (user_id) {\n      var resp = getUserPrefrence(user_id).then(function (resp) {\n        var result = resp.data;\n        var i = 0;\n        var temp_selected = [];\n\n        if (result.length > 0) {\n          for (i = 0; i < result.length; i++) {\n            temp_selected.push(result[i].category_id);\n          }\n        }\n\n        _this.setState({\n          user_pref: temp_selected.toString()\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.getCategory = function (user_id) {\n      console.log(user_id);\n      var resp = getCategories(user_id).then(function (resp) {\n        var result = resp.data;\n\n        _this.setState({\n          categories: result,\n          checkboxes: result,\n          DataisLoaded: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.setCategory = function (e) {\n      e.preventDefault();\n      var cat_list = _this.state.selectedCheckboxes;\n\n      if (cat_list == '') {\n        _this.setState({\n          error_vald: \"Please select atleast one category\"\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            error_vald: ''\n          });\n        }, 3000);\n      } else {\n        var categories = _this.state.selectedCheckboxes;\n        var previous_str = categories.concat(_this.state.user_pref);\n        var final_str = previous_str.toString();\n        var data = {\n          user_id: _this.state.user_id_ori,\n          category_id: final_str\n        };\n\n        _this.setState({\n          isLoading: true\n        });\n\n        var resp = setUserPreference(data).then(function (resp) {\n          var result = resp;\n          var message = result.message;\n          var status = result.status;\n\n          if (status == 1) {\n            _this.setState({\n              api_resp: message,\n              response_color: customstyles.alertPrimary,\n              isLoading: false\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                api_resp: ''\n              });\n\n              _this.props.navigation.goBack();\n            }, 3000);\n          } else {\n            _this.setState({\n              api_resp: message,\n              response_color: customstyles.alertdanger,\n              isLoading: false\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                api_resp: ''\n              });\n            }, 3000);\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    _this.onChange = function (id) {\n      _this.setState({\n        is_val_checked: !_this.state.is_val_checked\n      });\n\n      var selectedCheckboxes = _this.state.selectedCheckboxes;\n      var findIdx = selectedCheckboxes.indexOf(id);\n\n      if (findIdx > -1) {\n        selectedCheckboxes.splice(findIdx, 1);\n      } else {\n        selectedCheckboxes.push(id);\n      }\n\n      _this.setState({\n        selectedCheckboxes: selectedCheckboxes\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Category, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userDetails = this.props.route.params.userDetails;\n      var user_id = userDetails.id;\n      this.setState({\n        user_id_ori: user_id\n      });\n      this.getCategory(user_id);\n      this.getUserPrefrence(user_id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          DataisLoaded = _this$state.DataisLoaded,\n          items = _this$state.items;\n\n      if (!DataisLoaded) {\n        return _jsx(Loader, {});\n      }\n\n      return _jsx(SafeAreaView, {\n        style: styles.scrollArea,\n        children: _jsx(ScrollView, {\n          style: styles.innerView,\n          children: _jsxs(View, {\n            style: styles.container,\n            children: [_jsx(View, {\n              style: customstyles.header80,\n              children: _jsx(Text, {\n                style: customstyles.heading,\n                children: \"Categories\"\n              })\n            }), _jsxs(View, {\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return _this2.props.navigation.goBack();\n                },\n                style: [customstyles.btnThemecircle, {\n                  width: 36,\n                  height: 36\n                }],\n                children: _jsx(Ionicons, {\n                  name: \"md-chevron-back-outline\",\n                  size: 24,\n                  color: \"white\"\n                })\n              }), this.state.api_resp.length > 0 && _jsx(Text, {\n                style: this.state.response_color,\n                children: this.state.api_resp\n              }), _jsx(Text, {\n                style: {\n                  color: 'red'\n                },\n                children: this.state.error_vald\n              }), this.state.categories ? this.state.categories.map(function (item, i) {\n                return item.Selected == 'Inactive' ? _jsxs(View, {\n                  style: styles.section,\n                  children: [_jsx(Checkbox, {\n                    value: !!_this2.state.selectedCheckboxes.includes(item.id),\n                    onValueChange: function onValueChange() {\n                      return _this2.onChange(item.id);\n                    },\n                    checked: !!_this2.state.selectedCheckboxes.includes(item.id),\n                    selected: _this2.state.selectedCheckboxes.includes(item.id),\n                    color: !!_this2.state.selectedCheckboxes.includes(item.id) ? '#663792' : '#663792',\n                    style: customstyles.mr10\n                  }), _jsx(Text, {\n                    children: item.category_name\n                  })]\n                }, i) : _jsxs(View, {\n                  style: styles.section,\n                  children: [_jsx(Checkbox, {\n                    style: styles.checkbox,\n                    value: true,\n                    disabled: true,\n                    color: \"#663792\",\n                    style: customstyles.mr10\n                  }), _jsx(Text, {\n                    children: item.category_name\n                  })]\n                }, i);\n              }) : _jsx(Text, {\n                children: \"No Data\"\n              }), _jsx(TouchableOpacity, {\n                onPress: this.setCategory,\n                style: customstyles.textCenter,\n                children: _jsx(View, {\n                  style: customstyles.btnTheme,\n                  children: _jsx(Text, {\n                    style: customstyles.btnthemeText,\n                    children: this.state.isLoading ? \"Updating...\" : \"Update\"\n                  })\n                })\n              })]\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return Category;\n}(Component);\n\nvar styles = StyleSheet.create({\n  scrollArea: {\n    flex: 1,\n    width: \"100%\",\n    paddingTop: StatusBar.currentHeight\n  },\n  innerView: {\n    height: \"100%\",\n    paddingHorizontal: 20\n  },\n  section: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n    shadowColor: 'red',\n    shadowOffset: {\n      width: 10,\n      height: 2\n    },\n    shadowOpacity: .5,\n    shadowRadius: 7,\n    borderColor: \"#eee\",\n    borderWidth: 2,\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 5\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    padding: 10,\n    marginBottom: 20,\n    borderRadius: 30,\n    marginTop: 20\n  },\n  buttonText: {\n    color: \"#663792\",\n    fontWeight: \"bold\",\n    fontSize: 20\n  }\n});\nexport default Category;","map":{"version":3,"sources":["D:/IdentityWallet/components/Category.js"],"names":["React","Component","Ionicons","Loader","customstyles","getCategories","setUserPreference","getUserPrefrence","LinearGradient","AsyncStorage","Checkbox","Category","state","categories","DataisLoaded","values","api_resp","response_color","selectedCheckboxes","error_vald","user_id_ori","is_val_checked","isLoading","user_pref","user_id","resp","then","result","data","i","temp_selected","length","push","category_id","setState","toString","catch","error","console","log","getCategory","checkboxes","setCategory","e","preventDefault","cat_list","setTimeout","previous_str","concat","final_str","message","status","alertPrimary","props","navigation","goBack","alertdanger","onChange","id","findIdx","indexOf","splice","userDetails","route","params","items","styles","scrollArea","innerView","container","header80","heading","btnThemecircle","width","height","color","map","item","Selected","section","includes","mr10","category_name","checkbox","textCenter","btnTheme","btnthemeText","StyleSheet","create","flex","paddingTop","StatusBar","currentHeight","paddingHorizontal","flexDirection","alignItems","marginTop","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderColor","borderWidth","backgroundColor","padding","borderRadius","button","display","justifyContent","buttonText","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, Button, TextInput, View, StyleSheet, Text, TouchableOpacity, SafeAreaView, ScrollView, StatusBar, Pressable } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport Loader from './Loader';\r\nimport { customstyles } from \"../customstyle\";\r\nimport { getCategories, setUserPreference, getUserPrefrence } from \"./functions.js\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Checkbox from 'expo-checkbox';\r\n\r\nclass Category extends Component {\r\n\r\n    state = {\r\n        categories: [],\r\n        DataisLoaded: false,\r\n        values: [],\r\n        api_resp: '',\r\n        response_color: '',\r\n        selectedCheckboxes: [],\r\n        error_vald: '',\r\n        user_id_ori: '',\r\n        is_val_checked: false,\r\n        isLoading: false,\r\n        user_pref: [],\r\n        //selected_pref: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userDetails = this.props.route.params.userDetails;\r\n        let user_id = userDetails.id;\r\n        this.setState({\r\n            user_id_ori: user_id\r\n        });\r\n        this.getCategory(user_id);\r\n        this.getUserPrefrence(user_id);\r\n    }\r\n\r\n    // Get Prefrence\r\n    getUserPrefrence = (user_id) => {\r\n        let resp = getUserPrefrence(user_id)\r\n            .then(resp => {\r\n                let result = resp.data;\r\n                let i = 0;\r\n                let temp_selected = [];\r\n                //console.log(result[0].category_id);\r\n                if (result.length > 0) {\r\n                    for (i = 0; i < result.length; i++) {\r\n                        temp_selected.push(result[i].category_id);\r\n\r\n                    }\r\n                }\r\n                //console.log(temp_selected.toString());\r\n                this.setState({\r\n                    user_pref: temp_selected.toString(),\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    // Close\r\n\r\n    // Category Listing\r\n    getCategory = (user_id) => {\r\n        console.log(user_id);\r\n\r\n        let resp = getCategories(user_id)\r\n            .then(resp => {\r\n                let result = resp.data;\r\n                //console.log(result);\r\n                this.setState({\r\n                    categories: result,\r\n                    checkboxes: result,\r\n                    DataisLoaded: true,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    // Close\r\n\r\n    // Set Prefrence \r\n    setCategory = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state.selectedCheckboxes); return;\r\n        let cat_list = this.state.selectedCheckboxes;\r\n        if (cat_list == '') {\r\n            this.setState({\r\n                error_vald: \"Please select atleast one category\",\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({ error_vald: '' });\r\n            }, 3000)\r\n        } else {\r\n            let categories = this.state.selectedCheckboxes;\r\n            let previous_str = categories.concat(this.state.user_pref);\r\n            let final_str = previous_str.toString();\r\n            let data = {\r\n                user_id: this.state.user_id_ori,\r\n                category_id: final_str\r\n            }\r\n            //console.log(data);\r\n            this.setState({\r\n                isLoading: true,\r\n            })\r\n\r\n            var resp = setUserPreference(data)\r\n                .then(resp => {\r\n                    let result = resp;\r\n                    let message = result.message;\r\n                    let status = result.status;\r\n                    if (status == 1) {\r\n                        this.setState({\r\n                            api_resp: message,\r\n                            response_color: customstyles.alertPrimary,\r\n                            isLoading: false,\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.setState({ api_resp: '' });\r\n                            this.props.navigation.goBack();\r\n                        }, 3000)\r\n\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            api_resp: message,\r\n                            response_color: customstyles.alertdanger,\r\n                            isLoading: false,\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.setState({ api_resp: '' });\r\n                        }, 3000)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n\r\n    }\r\n    // Close\r\n\r\n    onChange = id => {\r\n        this.setState({\r\n            is_val_checked: !this.state.is_val_checked,\r\n        });\r\n        const selectedCheckboxes = this.state.selectedCheckboxes;\r\n        const findIdx = selectedCheckboxes.indexOf(id);\r\n        if (findIdx > -1) {\r\n            selectedCheckboxes.splice(findIdx, 1);\r\n        } else {\r\n            selectedCheckboxes.push(id);\r\n        }\r\n        this.setState({\r\n            selectedCheckboxes: selectedCheckboxes\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { DataisLoaded, items } = this.state;\r\n        if (!DataisLoaded) {\r\n            return <Loader />;\r\n        }\r\n        return (\r\n\r\n            <SafeAreaView style={styles.scrollArea}>\r\n                <ScrollView style={styles.innerView}>\r\n                    <View style={styles.container}>\r\n                        <View style={customstyles.header80}>\r\n                            <Text style={customstyles.heading}>Categories</Text>\r\n                        </View>\r\n\r\n                        <View>\r\n                            <TouchableOpacity onPress={() => this.props.navigation.goBack()} style={[customstyles.btnThemecircle, { width: 36, height: 36 }]}>\r\n                                <Ionicons name=\"md-chevron-back-outline\" size={24} color=\"white\" />\r\n                            </TouchableOpacity>\r\n                            {\r\n                                this.state.api_resp.length > 0 &&\r\n                                <Text style={this.state.response_color}>{this.state.api_resp}</Text>\r\n                            }\r\n                            <Text style={{ color: 'red' }}>{this.state.error_vald}</Text>\r\n                            {\r\n                                this.state.categories ?\r\n                                    this.state.categories.map((item, i) => (\r\n\r\n                                        ((item.Selected == 'Inactive')) ?\r\n\r\n                                            <View style={styles.section} key={i}>\r\n                                                <Checkbox\r\n                                                    value={!!this.state.selectedCheckboxes.includes(item.id)}\r\n                                                    onValueChange={() => this.onChange(item.id)}\r\n                                                    checked={!!this.state.selectedCheckboxes.includes(item.id)}\r\n                                                    selected={this.state.selectedCheckboxes.includes(item.id)}\r\n                                                    color={!!this.state.selectedCheckboxes.includes(item.id) ? '#663792' : '#663792'}\r\n                                                    style={customstyles.mr10}\r\n                                                />\r\n                                                <Text>{item.category_name}</Text>\r\n                                            </View>\r\n                                            : <View style={styles.section} key={i}>\r\n                                                <Checkbox\r\n                                                    style={styles.checkbox}\r\n                                                    value={true}\r\n                                                    disabled={true}\r\n                                                    //onValueChange={setChecked}\r\n                                                    color='#663792'\r\n                                                    style={customstyles.mr10}\r\n                                                />\r\n                                                <Text>{item.category_name}</Text>\r\n                                            </View>\r\n\r\n\r\n                                    ))\r\n                                    :\r\n                                    <Text>No Data</Text>\r\n                            }\r\n                            <TouchableOpacity onPress={this.setCategory} style={customstyles.textCenter}>\r\n                                <View\r\n                                    style={customstyles.btnTheme}\r\n                                >\r\n                                    <Text style={customstyles.btnthemeText}>\r\n                                        {this.state.isLoading ? \"Updating...\" : \"Update\"}\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </SafeAreaView >\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    scrollArea: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        paddingTop: StatusBar.currentHeight,\r\n    },\r\n    innerView: {\r\n        height: \"100%\",\r\n        paddingHorizontal: 20,\r\n    },\r\n    section: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n        shadowColor: 'red',\r\n        shadowOffset: { width: 10, height: 2 },\r\n        shadowOpacity: .5,\r\n        shadowRadius: 7,\r\n        borderColor: \"#eee\",\r\n        borderWidth: 2,\r\n        backgroundColor: \"white\",\r\n        padding: 10,\r\n        borderRadius: 5,\r\n    },\r\n    button: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n        padding: 10,\r\n        marginBottom: 20,\r\n        borderRadius: 30,\r\n        marginTop: 20,\r\n    },\r\n    buttonText: {\r\n        color: \"#663792\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 20\r\n    },\r\n});\r\nexport default Category;"]},"metadata":{},"sourceType":"module"}